[
  {"id":"nielsenHeuristicEvaluationUser1990","type":"paper-conference","title":"Heuristic evaluation of user interfaces","container-title":"Proceedings of the SIGCHI conference on Human factors in computing systems Empowering people - CHI '90","publisher":"ACM Press","page":"249-256","source":"DOI.org (Crossref)","event":"the SIGCHI conference","abstract":"Heuristic evaluation is an informal method of usability analysis where a number of evaluators are presented with an interface design and asked to comment on it. Four experiments showed that individual evaluators were mostly quite bad at doing such heuristic evaluations and that they only found between 20 and 51% of the usability problems in the interfaces they evaluated. On the other hand, we could aggregate the evaluations from several evaluators to a single evaluation and such aggregates do rather well, even when they consist of only three to five people.","URL":"http://portal.acm.org/citation.cfm?doid=97243.97281","DOI":"10.1145/97243.97281","ISBN":"978-0-201-50932-8","language":"en","author":[{"family":"Nielsen","given":"Jakob"},{"family":"Molich","given":"Rolf"}],"issued":{"date-parts":[[1990]]},"accessed":{"date-parts":[[2019,5,17]]},"publisher-place":"Seattle, Washington, United States"},
  {"id":"manakhovDefiningUsabilityProblems2016","type":"paper-conference","title":"Defining Usability Problems","page":"3144-3151","source":"ResearchGate","abstract":"Usability evaluation methods rely, either explicitly or implicitly, on a definition of a usability problem to specify an evaluation scope and a usability problem report format. However, the majority of definitions are vague or fail to capture all relevant phenomena in the scope of human-computer interaction. This paper proposes the elaborate definition of a usability problem to address theoretical issues and guide a problem analysis strategy for various evaluation methods.","DOI":"10.1145/2851581.2892387","author":[{"family":"Manakhov","given":"Pavel"},{"family":"D. Ivanov","given":"Vyacheslav"}],"issued":{"date-parts":[[2016,5,7]]}},
  {"id":"mackUsabilityInspectionMethods1994","type":"chapter","title":"Usability Inspection Methods","publisher":"John Wiley & Sons, Inc.","page":"295–339","source":"ACM Digital Library","URL":"http://dl.acm.org/citation.cfm?id=189200.189229","ISBN":"978-0-471-01877-3","author":[{"family":"Mack","given":"Robert"},{"family":"Montaniz","given":"Frank"}],"editor":[{"family":"Nielsen","given":"Jakob"},{"family":"Mack","given":"Robert L."}],"issued":{"date-parts":[[1994]]},"accessed":{"date-parts":[[2019,6,10]]},"publisher-place":"New York, NY, USA"},
  {"id":"nielsenMConferenceCompanionCHI940","type":"book","title":"mConferenceCompanion * CHI ’940 Boston,MassachusettsUSA April24-2$,1994 Usability Inspection Methods","source":"CiteSeer","abstract":"Usability inspection is the generic name for a set of cost-effective ways of evaluating user interfaces to find usability problems. They are fairly informal methods and easy to use.","author":[{"family":"Nielsen","given":"Jakob"}]},
  {"id":"holzingerUsabilityEngineeringMethods2005","type":"article-journal","title":"Usability Engineering Methods For Software Developers","container-title":"Commun. ACM","page":"71-74","volume":"48","source":"ResearchGate","abstract":"Usability is most often defined as the acceptability of a system for a particular class of users carrying out specific tasks in specific environment. Ease of use affects performance of the user and his satisfaction, which finally regulates the wish of the user to use the product or not. Thus, it is of great importance for every software practitioner that he should not only be aware of varius usability methods, but also be able to determine the best method suited to a software project. In case of human-computer interaction (HCI), it is a must to determine the usability of the product before prototyping it.","DOI":"10.1145/1039539.1039541","author":[{"family":"Holzinger","given":"Andreas"}],"issued":{"date-parts":[[2005,1,1]]},"container-title-short":"Commun. ACM"},
  {"id":"juristoAnalysingImpactUsability2007","type":"article-journal","title":"Analysing the impact of usability on software design","container-title":"Journal of Systems and Software","collection-title":"Evaluation and Assessment in Software Engineering","page":"1506-1516","volume":"80","issue":"9","source":"ScienceDirect","abstract":"This paper analyses what implications usability has for software development, paying special attention to the impact of this quality attribute on design. In this context, the aim is twofold. On the one hand, we intend to empirically corroborate that software design and usability are really related. This would mean that this, like other quality attributes, would need to be dealt with no later than at design time to develop usable software at a reasonable cost. On the other hand, we present a possible quantification, calculated from a number of real applications, of the effect of incorporating certain usability features at design time.","URL":"http://www.sciencedirect.com/science/article/pii/S0164121207000088","DOI":"10.1016/j.jss.2007.01.006","ISSN":"0164-1212","author":[{"family":"Juristo","given":"Natalia"},{"family":"Moreno","given":"Ana M."},{"family":"Sanchez-Segura","given":"Maria-Isabel"}],"issued":{"date-parts":[[2007,9,1]]},"accessed":{"date-parts":[[2019,6,10]]},"container-title-short":"Journal of Systems and Software"},
  {"id":"ferreUsabilityBasicsSoftware2001","type":"article-journal","title":"Usability basics for software developers","container-title":"IEEE Software","page":"22-29","volume":"18","issue":"1","source":"IEEE Xplore","abstract":"This tutorial examines the relationship between usability and the user interface and discusses how the usability process follows a design-evaluate-redesign cycle. It also discusses some management issues an organization must face when applying usability techniques.","DOI":"10.1109/52.903160","ISSN":"0740-7459","author":[{"family":"Ferre","given":"X."},{"family":"Juristo","given":"N."},{"family":"Windl","given":"H."},{"family":"Constantine","given":"L."}],"issued":{"date-parts":[[2001,1]]}},
  {"id":"borchersPatternApproachInteraction2000","type":"paper-conference","title":"A Pattern Approach to Interaction Design","container-title":"Proceedings of the 3rd Conference on Designing Interactive Systems: Processes, Practices, Methods, and Techniques","collection-title":"DIS '00","publisher":"ACM","page":"369–378","source":"ACM Digital Library","abstract":"To create successful interactive systems, user interface designers need to cooperate with developers and application domain experts in an interdisciplinary team. These groups, however, usually miss a common terminology to exchange ideas, opinions, and values.This paper presents an approach that uses pattern languages to capture this knowledge in software development, HCI, and the application domain. A formal, domain-independent definition of design patterns allows for computer support without sacrificing readability, and pattern use is integrated into the usability engineering life cycle.As an example, experience from building an award-winning interactive music exhibit was turned into a pattern language, which was then used to inform follow-up projects and support HCI education.","URL":"http://doi.acm.org/10.1145/347642.347795","DOI":"10.1145/347642.347795","ISBN":"978-1-58113-219-9","author":[{"family":"Borchers","given":"Jan O."}],"issued":{"date-parts":[[2000]]},"accessed":{"date-parts":[[2019,6,20]]},"publisher-place":"New York, NY, USA","event-place":"New York City, New York, USA"},
  {"id":"folmerFrameworkCapturingRelationship2003","type":"article-journal","title":"A framework for capturing the relationship between usability and software architecture","container-title":"Software Process: Improvement and Practice","page":"67-87","volume":"8","issue":"2","source":"Wiley Online Library","abstract":"Usability is increasingly recognized as an essential factor that determines the success of software systems. Practice shows that for current software systems, most usability issues are detected during testing and deployment. Fixing usability issues during this late stage of the development proves to be very costly. Some usability-improving modifications such as usability patterns may have architectural implications. We believe that the software architecture may restrict usability. The high costs associated with fixing usability issues during late-stage development prevent developers from making the necessary adjustments for meeting all the usability requirements. To improve upon this situation, we have investigated the relationship between usability and software architecture to gain a better understanding of how the architecture restricts the level of usability. Our article makes a number of contributions; a framework is presented that expresses the relationship between usability and software architecture. The framework consists of an integrated set of design solutions such as usability patterns and usability properties that have been identified in various cases in industry, modern day software and literature surveys. These solutions, in most cases, have a positive effect on usability but are difficult to retrofit into applications because they have architectural impact. Our framework may be used to guide and inform the architectural design phase. This may decrease development costs by reducing the amount of usability issues that need to be fixed during the later stages of development. Copyright © 2004 John Wiley & Sons, Ltd.","URL":"https://onlinelibrary.wiley.com/doi/abs/10.1002/spip.171","DOI":"10.1002/spip.171","ISSN":"1099-1670","language":"en","author":[{"family":"Folmer","given":"Eelke"},{"family":"Gurp","given":"Jilles","dropping-particle":"van"},{"family":"Bosch","given":"Jan"}],"issued":{"date-parts":[[2003]]},"accessed":{"date-parts":[[2019,6,19]]}},
  {"id":"burghardtUsabilityPatternIdentification2016","type":"paper-conference","title":"Usability Pattern Identification Through Heuristic Walkthroughs","container-title":"Design, User Experience, and Usability: Design Thinking and Methods","collection-title":"Lecture Notes in Computer Science","publisher":"Springer International Publishing","page":"219-230","source":"Springer Link","abstract":"Patterns are a popular means to document design knowledge in different fields of application, including HCI. Accordingly, a large number of different HCI pattern formats have been suggested. However, relatively little is said about how to systematically identify such patterns. In order to make the process of identifying patterns more transparent and comprehensible, I apply a usability inspection method to generate data that can be used as input for the systematic creation of usability patterns. This article describes the basic idea of identifying usability patterns through a series of heuristic walkthroughs and illustrates the approach by means of a case study in the field of “linguistic annotation tools”.","ISBN":"978-3-319-40409-7","language":"en","author":[{"family":"Burghardt","given":"Manuel"}],"editor":[{"family":"Marcus","given":"Aaron"}],"issued":{"date-parts":[[2016]]}},
  {"id":"anacletoInternationalJournalAdvances","type":"book","title":"The International Journal on Advances in Intelligent Systems is Published by IARIA. ISSN: 1942-2679","source":"CiteSeer","abstract":"Responsibility for the contents rests upon the authors and not upon IARIA, nor on IARIA volunteers, staff, or contractors. IARIA is the owner of the publication and of editorial aspects. IARIA reserves the right to update the content for quality improvements. Abstracting is permitted with credit to the source. Libraries are permitted to photocopy or print, providing the reference is mentioned and that the resulting material is made available at no cost. Reference should mention: International Journal on Advances in Intelligent Systems, issn 1942-2679 vol. 5, no. 3 & 4, year 2012,","title-short":"The International Journal on Advances in Intelligent Systems is Published by IARIA. ISSN","author":[{"family":"Anacleto","given":"Junia"},{"family":"Universi","given":"Federal"}]},
  {"id":"mendoza-gonzalezServiceSecuritySpecificationBased2009","type":"article-journal","title":"Service-Security Specification based on Usability Criteria and Patterns Approach","container-title":"Journal of Computers","page":"705-712","volume":"4","source":"ResearchGate","abstract":"A specification is provided in this paper to assist in the design of usable and secure web-services. In particular, this specification helps design an adequate security information feedback based on User Interface Patterns, the resulting visual feedback is then evaluated against a set of design/evaluation criteria called Human-Computer Interaction for Security (HCI-S). In addition we propose in a theoretical manner including the knowledge offered by the proposed specification based on patterns in a new level for the architectural structure of WS-Security specification, which is currently one of the most popular specifications to establish secure web services.","DOI":"10.4304/jcp.4.8.705-712","author":[{"family":"Mendoza-Gonzalez","given":"Ricardo"},{"family":"Vargas Martin","given":"Miguel"},{"family":"Muñoz-Arteaga","given":"Jaime"},{"family":"Rodriguez","given":"Francisco"},{"family":"Ochoa-Zezzatti","given":"Carlos"}],"issued":{"date-parts":[[2009,8,1]]},"container-title-short":"Journal of Computers"},
  {"id":"turkTHESISSUBMITTEDGRADUATE","type":"article-journal","title":"A THESIS SUBMITTED TO THE GRADUATE SCHOOL OF NATURAL AND APPLIED SCIENCES OF MIDDLE EAST TECHNICAL UNIVERSITY","page":"80","source":"Zotero","abstract":"This study investigates the connection between design patterns, object oriented (OO) quality metrics and software maintainability. The literature on OO metrics, design patterns and software maintainability are reviewed, the relation between OO metrics and software maintainability is investigated, and then, in terms of obtained maintainability indicator metrics, the maintainability change of an application due to usage of design patterns is observed.","language":"en","author":[{"family":"Türk","given":"Tuna"}]},
  {"id":"ampatzoglouEmpiricalStudyDesign2010","type":"paper-conference","title":"An Empirical Study on Design Pattern Usage on Open-Source Software.","page":"275-284","source":"ResearchGate","event":"ENASE 2010 - Proceedings of the 5th International Conference on Evaluation of Novel Approaches to Software Engineering","abstract":"Currently, open source software communities are thriving and the number of projects that are available through well known code repositories is rapidly increasing The amount of code that is freely available to developers facilitates high reuse opportunities. One of the major concerns of developers when reusing code is the quality of the code that is going to be reused. Design patterns are well known solutions that are reported to produce substantial benefits with respect to software quality. In this paper, we investigate the extent to which design patterns are employed in open source software. More specifically, this study reports empirical results based on the number and type of design patterns retrieved from open source software projects. Up to now, one hundred and eight (108) open source software projects of various characteristics have been considered. The results of the study suggest that several patterns are more frequently used in open source software than others, that some patterns are more applicable in some categories than others and that program size, number of downloads, days of project activity and the number of developers are crucial factors that influence the use of design patterns in open source software project.","author":[{"family":"Ampatzoglou","given":"Apostolos"},{"family":"Kyriaki","given":"Savva"},{"family":"Stamelos","given":"Ioannis"},{"family":"Charalampidou","given":"Sofia"}],"issued":{"date-parts":[[2010,1,1]]}},
  {"id":"pekerDesignGoalDesign2011","type":"paper-conference","title":"A design goal and design pattern based approach for development of game engines for mobile platforms","container-title":"2011 16th International Conference on Computer Games (CGAMES)","page":"114-120","source":"IEEE Xplore","event":"2011 16th International Conference on Computer Games (CGAMES)","abstract":"Nowadays, increasing number of game engines are being developed for mobile platforms. As game engines developed for mobile platforms are small scale compared to console and desktop alternatives, game engine development in mobile platforms uses basic software development methods. However, as mobile platforms enhance and development of more complex games become possible, basic development methods will not scale well for advanced game development requirements. This paper examines design of a mobile game engine that provides software maturity by using design goals and design patterns. Our results show that developing a game engine by using a design goal and a design pattern based approach provides a more regular and a clear path for building each aspect of the engine with a high-level perspective of design.","DOI":"10.1109/CGAMES.2011.6000325","author":[{"family":"Peker","given":"A. G."},{"family":"Can","given":"T."}],"issued":{"date-parts":[[2011,7]]}},
  {"id":"mahemoffPatternLanguagesUsability1998","type":"paper-conference","title":"Pattern languages for usability: an investigation of alternative approaches","container-title":"Proceedings. 3rd Asia Pacific Computer Human Interaction (Cat. No.98EX110)","page":"25-30","source":"IEEE Xplore","event":"Proceedings. 3rd Asia Pacific Computer Human Interaction (Cat. No.98EX110)","abstract":"The best way to ensure usability is to treat human factors as an input to design, rather than merely evaluating prototypes or design documentation. The capability of pattern languages to facilitate the design process, improve communication, and record design philosophies suggests that they may assist the user centred design process. Researchers have not yet investigated in detail what a pattern language for usability would offer, or how it could be used. The paper explores several alternative conceptualisations of usability oriented patterns. Patterns of tasks provide high level detail about tasks users often perform and how they can be supported. User profile patterns help analysts ensure different kinds of users are supported. Relationships between user interface objects can also be captured by patterns, assisting system implementers by providing information more directly. Patterns of individual user interface objects, as well as entire systems are also considered, but appear to have more limited application.","DOI":"10.1109/APCHI.1998.704138","title-short":"Pattern languages for usability","author":[{"family":"Mahemoff","given":"M. J."},{"family":"Johnston","given":"L. J."}],"issued":{"date-parts":[[1998,7]]}},
  {"id":"rodriguezReusableSolutionsImplementing2015","type":"article-journal","title":"Reusable Solutions for Implementing Usability Functionalities","container-title":"International Journal of Software Engineering and Knowledge Engineering","page":"727-755","volume":"25","issue":"4","source":"Web of Science","abstract":"Usability is a software system quality attribute. Although software engineers originally considered usability to be related exclusively to the user interface, it was later found to affect the core functionality of software applications. As of then, proposals for addressing usability at different stages of the software development cycle were researched. The objective of this paper is to present three reusable solutions at detailed design and programming level in order to effectively implement the Abort Operation, Progress Feedback and Preferences usability functionalities in web applications. To do this, an inductive research method was applied. We developed three web applications including the above usability functionalities as case studies. We looked for commonalities across the implementations in order to induce a general solution. The elements common to all three developed applications include: application scenarios, functionalities, responsibilities, classes, methods, attributes and code snippets. The findings were specified as an implementation-oriented design pattern and as programming patterns in three languages. Additional case studies were conducted in order to validate the proposed solution. The independent developers used the patterns to implement different applications for each case study. As a result, we found that solutions specified as patterns can be reused to develop web applications.","DOI":"10.1142/S0218194015500084","ISSN":"0218-1940","note":"WOS:000361655500004","language":"English","author":[{"family":"Rodriguez","given":"Francy D."},{"family":"Acuna","given":"Silvia T."},{"family":"Juristo","given":"Natalia"}],"issued":{"date-parts":[[2015,5]]},"container-title-short":"Int. J. Softw. Eng. Knowl. Eng."},
  {"id":"estradaUsingOSDesign2017","type":"paper-conference","title":"Using OS Design Patterns to Provide Reliability and Security as-a-Service for VM-based Clouds","container-title":"Proceedings of the 13th ACM SIGPLAN/SIGOPS International Conference on Virtual Execution Environments","collection-title":"VEE '17","publisher":"ACM","page":"157–170","source":"ACM Digital Library","abstract":"This paper extends the concepts behind cloud services to offer hypervisor-based reliability and security monitors for cloud virtual machines. Cloud VMs can be heterogeneous and as such guest OS parameters needed for monitoring can vary across different VMs and must be obtained in some way. Past work involves running code inside the VM, which is unacceptable for a cloud environment. We solve this problem by recognizing that there are common OS design patterns that can be used to infer monitoring parameters from the guest OS. We extract information about the cloud user's guest OS with the user's existing VM image and knowledge of OS design patterns as the only inputs to analysis. To demonstrate the range of monitoring functionality possible with this technique, we implemented four sample monitors: a guest OS process tracer, an OS hang detector, a return-to-user attack detector, and a process-based keylogger detector.","URL":"http://doi.acm.org/10.1145/3050748.3050759","DOI":"10.1145/3050748.3050759","ISBN":"978-1-4503-4948-2","author":[{"family":"Estrada","given":"Zachary J."},{"family":"Sprabery","given":"Read"},{"family":"Yan","given":"Lok"},{"family":"Yu","given":"Zhongzhi"},{"family":"Campbell","given":"Roy"},{"family":"Kalbarczyk","given":"Zbigniew"},{"family":"Iyer","given":"Ravishankar K."}],"issued":{"date-parts":[[2017]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Xi'an, China"},
  {"id":"garciaSoftwareDesignGuidelines2011","type":"paper-conference","title":"Software Design Guidelines for Usability","source":"Semantic Scholar","abstract":"For years, the Human Computer Interaction (HCI) community has defined the expected characteristics of usable software systems. However, from a Software Engineering (SE) perspective, the process of incorporating usability into software is not always straightforward, as many usability features have strong implications in the underlying architecture. For example, successfully including a “cancel” feature in an application may involve complex interrelated data structures and functionalities. Our work is focused upon providing developers with a set of guidelines to assist them in including such usability features with high impact on software design into their developments effectively.","author":[{"family":"García","given":"Laura Elena Carvajal"},{"family":"Sánchez-Capuchino","given":"Ana María Moreno"}],"issued":{"date-parts":[[2011]]}},
  {"id":"northProductDesignPatterns2011","type":"paper-conference","title":"Product Design Patterns for Agent-based Modeling","container-title":"Proceedings of the Winter Simulation Conference","collection-title":"WSC '11","publisher":"Winter Simulation Conference","page":"3087–3098","source":"ACM Digital Library","abstract":"Since they were first introduced by architect Christopher Alexander in his classic book The Timeless Way of Building, design patterns have offered a powerful yet simple way to conceptualize and communicate designs in many disciplines. Design patterns became widely used for software development by the 1990's. These software design patterns have subsequently been shown to be of great value in improving the reliability and reducing the cost of software. Given that virtually all large-scale agent-based models are ultimately implemented in software, there is great potential for software design patterns to improve the practice of agent-based modeling. Several authors have discussed the use of patterns for agent-based modeling or agent-oriented software. This paper's contribution is that it provides an extensive set of both existing and new agent-based modeling design patterns, each of which is substantiated with at least three successful published example uses in models or modeling platforms.","URL":"http://dl.acm.org/citation.cfm?id=2431518.2431884","author":[{"family":"North","given":"Michael J."},{"family":"Macal","given":"Charles M."}],"issued":{"date-parts":[[2011]]},"accessed":{"date-parts":[[2019,6,17]]},"event-place":"Phoenix, Arizona"},
  {"id":"kangPatternsBuildingDependable2010","type":"paper-conference","title":"Patterns for Building Dependable Systems with Trusted Bases","container-title":"Proceedings of the 17th Conference on Pattern Languages of Programs","collection-title":"PLOP '10","publisher":"ACM","page":"19:1–19:14","source":"ACM Digital Library","abstract":"We propose a set of patterns for structuring a system to be dependable by design. The key idea is to localize the system's most critical requirements into small, reliable parts called trusted bases. We describe two instances of trusted bases: (1) the end-to-end check, which localizes the correctness checking of a computation to end points of a system, and (2) the trusted kernel, which ensures the safety of a set of resources with a small core of a system.","URL":"http://doi.acm.org/10.1145/2493288.2493307","DOI":"10.1145/2493288.2493307","ISBN":"978-1-4503-0107-7","author":[{"family":"Kang","given":"Eunsuk"},{"family":"Jackson","given":"Daniel"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Reno, Nevada, USA"},
  {"id":"inostrozaUsabilityHeuristicsTouchscreenbased2012","type":"article-journal","title":"Usability Heuristics for Touchscreen-based Mobile Devices","container-title":"2012 Ninth International Conference on Information Technology - New Generations","page":"662-667","source":"Semantic Scholar","abstract":"Usability is a main quality attribute for any interactive product. Usability in touch screen-based mobile devices is something essential and should be considered when launching a new product, it could be a distinguishing feature in a rushing market, as it is the one of the mobile devices nowadays. Traditional methods for usability measuring do not really fit the nature of these devices. There is a need for new usability evaluation methods or at least for the use of traditional evaluations in novel ways. A set of specific usability heuristics for touch screen-based mobile devices is proposed and (preliminary) validated.","DOI":"10.1109/ITNG.2012.134","author":[{"family":"Inostroza","given":"Rodolfo"},{"family":"Rusu","given":"Cristian"},{"family":"Roncagliolo","given":"Silvana"},{"family":"Granizo","given":"Cristhy Jiménez"},{"family":"Rusu","given":"Virginica"}],"issued":{"date-parts":[[2012]]}},
  {"id":"liDesignPatternsScientific2011","type":"paper-conference","title":"Design Patterns for Scientific Applications in DryadLINQ CTP","container-title":"Proceedings of the Second International Workshop on Data Intensive Computing in the Clouds","collection-title":"DataCloud-SC '11","publisher":"ACM","page":"61–70","source":"ACM Digital Library","abstract":"The design and implementation of higher level data flow programming language interfaces are becoming increasingly important for data intensive computation. DryadLINQ is a declarative, data-centric language that enables programmers to address the Big Data issue in the Windows Platform. DryadLINQ has been successfully used in a wide range of applications for the last five years. The latest release of DryadLINQ was published as a Community Technology Preview (CTP) in December 2010 and contains new features and interfaces that can be customized in order to achieve better performances within applications and in regard to usability for developers. This paper presents three design patterns in DryadLINQ CTP that are applicable to a large class of scientific applications, exemplified by SW-G, Matrix-Matrix Multiplication and PageRank with real data.","URL":"http://doi.acm.org/10.1145/2087522.2087533","DOI":"10.1145/2087522.2087533","ISBN":"978-1-4503-1144-1","author":[{"family":"Li","given":"Hui"},{"family":"Ruan","given":"Yang"},{"family":"Zhou","given":"Yuduo"},{"family":"Qiu","given":"Judy"},{"family":"Fox","given":"Geoffrey"}],"issued":{"date-parts":[[2011]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Seattle, Washington, USA"},
  {"id":"knoteRequirementDesignPatterns2016","type":"paper-conference","title":"From Requirement to Design Patterns for Ubiquitous Computing Applications","container-title":"Proceedings of the 21st European Conference on Pattern Languages of Programs","collection-title":"EuroPlop '16","publisher":"ACM","page":"26:1–26:11","source":"ACM Digital Library","abstract":"Ubiquitous Computing describes a concept where computing appears around us at any time and any location. Respective systems rely on context-sensitivity and adaptability. This means that they constantly collect data of the user and his context to adapt its functionalities to certain situations. Hence, the development of Ubiquitous Computing systems is not only a technical issue and must be considered from a privacy, legal and usability perspective, too. This indicates a need for several experts from different disciplines to participate in the development process, mentioning requirements and evaluating design alternatives. In order to capture the knowledge of these interdisciplinary teams to make it reusable for similar problems, a pattern logic can be applied. In the early phase of a development project, requirement patterns are used to describe recurring requirements for similar problems, whereas in a more advanced development phase, design patterns are deployed to find a suitable design for recurring requirements. However, existing literature does not give sufficient insights on how both concepts are related and how the process of deriving design patterns from requirements (patterns) appears in practice. In our work, we give insights on how trust-related requirements for Ubiquitous Computing applications evolve to interdisciplinary design patterns. We elaborate on a six-step process using an example requirement pattern. With this contribution, we shed light on the relation of interdisciplinary requirement and design patterns and provide experienced practitioners and scholars regarding UC application development a way for systematic and effective pattern utilization.","URL":"http://doi.acm.org/10.1145/3011784.3011812","DOI":"10.1145/3011784.3011812","ISBN":"978-1-4503-4074-8","author":[{"family":"Knote","given":"Robin"},{"family":"Baraki","given":"Harun"},{"family":"Söllner","given":"Matthias"},{"family":"Geihs","given":"Kurt"},{"family":"Leimeister","given":"Jan Marco"}],"issued":{"date-parts":[[2016]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Kaufbeuren, Germany"},
  {"id":"schmagerGoHotDrawEvaluatingGo2010","type":"paper-conference","title":"GoHotDraw: Evaluating the Go Programming Language with Design Patterns","container-title":"Evaluation and Usability of Programming Languages and Tools","collection-title":"PLATEAU '10","publisher":"ACM","page":"10:1–10:6","source":"ACM Digital Library","abstract":"Go, a new programming language backed by Google, has the potential for widespread use: it deserves an evaluation. Design patterns are records of idiomatic programming practice and inform programmers about good program design. In this study, we evaluate Go by implementing design patterns, and porting the \"pattern-dense\" drawing framework HotDraw into Go, producing GoHotDraw. We show how Go's language features affect the implementation of Design Patterns, identify some potential Go programming patterns, and demonstrate how studying design patterns can contribute to the evaluation of a programming language.","URL":"http://doi.acm.org/10.1145/1937117.1937127","DOI":"10.1145/1937117.1937127","ISBN":"978-1-4503-0547-1","title-short":"GoHotDraw","author":[{"family":"Schmager","given":"Frank"},{"family":"Cameron","given":"Nicholas"},{"family":"Noble","given":"James"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Reno, Nevada"},
  {"id":"shafiqueExploitingProgramlevelMasking2013","type":"paper-conference","title":"Exploiting Program-level Masking and Error Propagation for Constrained Reliability Optimization","container-title":"Proceedings of the 50th Annual Design Automation Conference","collection-title":"DAC '13","publisher":"ACM","page":"17:1–17:9","source":"ACM Digital Library","abstract":"Since embedded systems design involves stringent design constraints, designing a system for reliability requires optimization under tolerable overhead constraints. This paper presents a novel reliability-driven compilation scheme for software program reliability optimization under tolerable overhead constraints. Our scheme exploits program-level error masking and propagation properties to perform reliability-driven prioritization of instructions and selective protection during compilation. To enable this, we develop statistical models for estimating error masking and propagation probabilities. Our scheme provides significant improvement in reliability efficiency (avg. 30%-60%) compared to state-of-the-art program-level protection schemes.","URL":"http://doi.acm.org/10.1145/2463209.2488755","DOI":"10.1145/2463209.2488755","ISBN":"978-1-4503-2071-9","author":[{"family":"Shafique","given":"Muhammad"},{"family":"Rehman","given":"Semeen"},{"family":"Aceituno","given":"Pau Vilimelis"},{"family":"Henkel","given":"Jörg"}],"issued":{"date-parts":[[2013]]},"accessed":{"date-parts":[[2019,6,18]]},"publisher-place":"New York, NY, USA","event-place":"Austin, Texas"},
  {"id":"sauppeDesignPatternsExploring2014","type":"paper-conference","title":"Design Patterns for Exploring and Prototyping Human-robot Interactions","container-title":"Proceedings of the 32Nd Annual ACM Conference on Human Factors in Computing Systems","collection-title":"CHI '14","publisher":"ACM","page":"1439–1448","source":"ACM Digital Library","abstract":"Robotic products are envisioned to offer rich interactions in a range of environments. While their specific roles will vary across applications, these products will draw on fundamental building blocks of interaction, such as greeting people, narrating information, providing instructions, and asking and answering questions. In this paper, we explore how such building blocks might serve as interaction design patterns that enable design exploration and prototyping for human-robot interaction. To construct a pattern library, we observed human interactions across different scenarios and identified seven patterns, such as question-answer pairs. We then designed and implemented Interaction Blocks, a visual authoring environment that enabled prototyping of robot interactions using these patterns. Design sessions with designers and developers demonstrated the promise of using a pattern language for designing robot interactions, confirmed the usability of our authoring environment, and provided insights into future research on tools for human-robot interaction design.","URL":"http://doi.acm.org/10.1145/2556288.2557057","DOI":"10.1145/2556288.2557057","ISBN":"978-1-4503-2473-1","author":[{"family":"Sauppé","given":"Allison"},{"family":"Mutlu","given":"Bilge"}],"issued":{"date-parts":[[2014]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Toronto, Ontario, Canada"},
  {"id":"riehleDesignPatternDensity","type":"article-journal","title":"Design Pattern Density Defined","page":"12","source":"Zotero","abstract":"Design pattern density is a metric that measures how much of an object-oriented design can be understood and represented as instances of design patterns. Expert developers have long believed that a high design pattern density implies a high maturity of the design under inspection. This paper presents a quantifiable and observable definition of this metric. The metric is illustrated and qualitatively validated using four real-world case studies. We present several hypotheses of the metric’s meaning and their implications, including the one about design maturity. We propose that the design pattern density of a maturing framework has a fixed point and we show that if software design patterns make learning frameworks easier, a framework’s design pattern density is a measure of how much easier it will become.","language":"en","author":[{"family":"Riehle","given":"Dirk"}]},
  {"id":"garroModelbasedMethodSystem2012","type":"paper-conference","title":"A Model-based Method for System Reliability Analysis","container-title":"Proceedings of the 2012 Symposium on Theory of Modeling and Simulation - DEVS Integrative M&S Symposium","collection-title":"TMS/DEVS '12","publisher":"Society for Computer Simulation International","page":"2:1–2:8","source":"ACM Digital Library","abstract":"System reliability is an important non-functional requirement whose satisfaction is even crucial for mission critical systems. However, the increase in both system complexity and accuracy required in the reliability analyses often makes inadequate traditional techniques which are mainly based on statistical and probabilistic tools and on the hierarchical decomposition of the system in terms of its components. Moreover, the integration of classical techniques in typical system development processes, and especially in the design phases, is quite difficult and thus their use is often postponed to the later development stages (e.g. system verification) with the possible risk of having to revise even basic design choices and with a consequent increase in both completion time and development cost. To address these issues, the paper proposes a Model-Based method for system reliability analysis which combines in a unified framework the benefits of popular OMG modeling languages (UML, SysML) with the wide adopted Mathworks simulation and analysis environments (Matlab, Simulink). The flexibility and scalability of the proposal, as well as its effectiveness in evaluating through simulation the system reliability performances, is exemplified through a case study concerning the reliability analysis of a Flight Management System.","URL":"http://dl.acm.org/citation.cfm?id=2346616.2346618","ISBN":"978-1-61839-786-7","author":[{"family":"Garro","given":"Alfredo"},{"family":"Tundis","given":"Andrea"}],"issued":{"date-parts":[[2012]]},"accessed":{"date-parts":[[2019,6,18]]},"publisher-place":"San Diego, CA, USA","event-place":"Orlando, Florida"},
  {"id":"wangAccurateEfficientReliability2013","type":"paper-conference","title":"Accurate and Efficient Reliability Estimation Techniques During ADL-driven Embedded Processor Design","container-title":"Proceedings of the Conference on Design, Automation and Test in Europe","collection-title":"DATE '13","publisher":"EDA Consortium","page":"547–552","source":"ACM Digital Library","abstract":"The downscaling of technology features has brought the system developers an important design criteria, reliability, into prime consideration. Due to external radiation effects and temperature gradients, the CMOS device is not guaranteed anymore to function flawlessly. On the other hand, admission for errors to occur allows extending the power budget. The power-performance-reliability trade-off compounds the system design challenge, for which efficient design exploration framework is needed. In this work, we present a high-level processor design framework extended with two reliability estimation techniques. First, a simulation-based technique, which allows a generic instruction-set simulator to estimate reliability via high-level fault injection capability. Second, a novel analytical technique, which is based on the reliability model for coarse arithmetic logical operator blocks within a processor instruction. The techniques are tested with a RISC processor and several embedded application kernels. Our results show the efficiency and accuracy of these techniques against a HDL-level reliability estimation framework.","URL":"http://dl.acm.org/citation.cfm?id=2485288.2485423","ISBN":"978-1-4503-2153-2","author":[{"family":"Wang","given":"Zheng"},{"family":"Singh","given":"Kapil"},{"family":"Chen","given":"Chao"},{"family":"Chattopadhyay","given":"Anupam"}],"issued":{"date-parts":[[2013]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"San Jose, CA, USA","event-place":"Grenoble, France"},
  {"id":"roderPatternApproachSpecifying2011a","type":"paper-conference","title":"A Pattern Approach to Specifying Usability Features in Use Cases","container-title":"Proceedings of the 2Nd International Workshop on Pattern-Driven Engineering of Interactive Computing Systems","collection-title":"PEICS '11","publisher":"ACM","page":"12–15","source":"ACM Digital Library","abstract":"Functional features like Undo can greatly add to the usability of interactive software systems. In recent years, many features have consequently been identified as usability patterns --- proven and reusable solutions for building usable systems. This paper presents an approach to integrating usability patterns into established software engineering processes, mainly requirements definition. The approach uses semiformal specification templates to enable developers to specify pattern application in use case-based requirements specifications. Both general constraints for pattern application and low-level requirements related to individual interactions between a system and its users can be specified. The resulting specification defines how and where usability patterns are to be applied, thus facilitating subsequent engineering activities (e. g. software architecture design, implementation, and test) and improving traceability of pattern application.","URL":"http://doi.acm.org/10.1145/2018431.2018435","DOI":"10.1145/2018431.2018435","ISBN":"978-1-4503-0856-4","author":[{"family":"Röder","given":"Holger"}],"issued":{"date-parts":[[2011]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Pisa, Italy"},
  {"id":"bunkeSoftwaresecurityPatternsDegree2015","type":"paper-conference","title":"Software-security Patterns: Degree of Maturity","container-title":"Proceedings of the 20th European Conference on Pattern Languages of Programs","collection-title":"EuroPLoP '15","publisher":"ACM","page":"42:1–42:17","source":"ACM Digital Library","abstract":"Since Gamma et al. published their design patterns, patterns are very popular in the area of software engineering. They provide best practice to handle recurring problems during the software development phase. Three years later, security patterns appeared and provided solutions for security problems. Besides the name analogy, design and security patterns should be very similar except for the security factor. In research and industry software engineering with design patterns is widespread. However, some researchers suspect that security-pattern engineering is made difficult by some issues such as terminology or description form. Detecting adoption problems can help to improve security patterns in future. Thus, they can promote the awareness of security especially in the software maintenance phase where many programmers first give attention to security problems. Therefore, we will compare design and security patterns to find indicators for negative impact on security pattern engineering in software development. We address this issue on inspecting the aspects classification, description form, provided code examples, and usage in the software life-cycle. We determine the degree of maturity of software-security patterns by comparing them to the well-explored design patterns. To achieve the objective, we inspect the pattern terminology and conducted a study on the used description forms including provided UML diagrams and code examples. Moreover, a literature review is conducted to compare their state of research w.r.t. the software life-cycle. The maturity degree of security patterns compared to common design patterns differs and we depict further research opportunities on security patterns.","URL":"http://doi.acm.org/10.1145/2855321.2855364","DOI":"10.1145/2855321.2855364","ISBN":"978-1-4503-3847-9","title-short":"Software-security Patterns","author":[{"family":"Bunke","given":"Michaela"}],"issued":{"date-parts":[[2015]]},"accessed":{"date-parts":[[2019,6,18]]},"publisher-place":"New York, NY, USA","event-place":"Kaufbeuren, Germany"},
  {"id":"riehleDesignPatternDensity2009","type":"paper-conference","title":"Design Pattern Density Defined","container-title":"Proceedings of the 24th ACM SIGPLAN Conference on Object Oriented Programming Systems Languages and Applications","collection-title":"OOPSLA '09","publisher":"ACM","page":"469–480","source":"ACM Digital Library","abstract":"Design pattern density is a metric that measures how much of an object-oriented design can be understood and represented as instances of design patterns. Expert developers have long believed that a high design pattern density implies a high maturity of the design under inspection. This paper presents a quantifiable and observable definition of this metric. The metric is illustrated and qualitatively validated using four real-world case studies. We present several hypotheses of the metric's meaning and their implications, including the one about design maturity. We propose that the design pattern density of a maturing framework has a fixed point and we show that if software design patterns make learning frameworks easier, a framework's design pattern density is a measure of how much easier it will become.","URL":"http://doi.acm.org/10.1145/1640089.1640125","DOI":"10.1145/1640089.1640125","ISBN":"978-1-60558-766-0","author":[{"family":"Riehle","given":"Dirk"}],"issued":{"date-parts":[[2009]]},"accessed":{"date-parts":[[2019,6,18]]},"publisher-place":"New York, NY, USA","event-place":"Orlando, Florida, USA"},
  {"id":"preschernPatternbasedSafetyDevelopment2014","type":"paper-conference","title":"Pattern-based Safety Development Methods: Overview and Comparison","container-title":"Proceedings of the 19th European Conference on Pattern Languages of Programs","collection-title":"EuroPLoP '14","publisher":"ACM","page":"28:1–28:20","source":"ACM Digital Library","abstract":"Design patterns provide good solutions to re-occurring problems and several patterns and methods how to apply them have been documented for safety-critical systems. However, due to the large amount of safety-related patterns and methods, it is difficult to get an overview of their capabilities and shortcomings as there currently is no survey on safety patterns and their application methods available in literature. To give an overview of existing pattern-based safety development methods, this paper presents existing methods from literature and discusses and compares several aspects of these methods such as the patterns and tools they use, their integration into a safety development process, or their maturity.","URL":"http://doi.acm.org/10.1145/2721956.2721958","DOI":"10.1145/2721956.2721958","ISBN":"978-1-4503-3416-7","title-short":"Pattern-based Safety Development Methods","author":[{"family":"Preschern","given":"Christopher"},{"family":"Kajtazovic","given":"Nermin"},{"family":"Höller","given":"Andrea"},{"family":"Kreiner","given":"Christian"}],"issued":{"date-parts":[[2014]]},"accessed":{"date-parts":[[2019,6,18]]},"publisher-place":"New York, NY, USA","event-place":"Irsee, Germany"},
  {"id":"stockerInterfaceQualityPatterns2018","type":"paper-conference","title":"Interface Quality Patterns: Communicating and Improving the Quality of Microservices APIs","container-title":"Proceedings of the 23rd European Conference on Pattern Languages of Programs","collection-title":"EuroPLoP '18","publisher":"ACM","page":"10:1–10:16","source":"ACM Digital Library","abstract":"The design and evolution of Application Programming Interfaces (APIs) in microservices architectures is challenging. General design issues in integration and programming have been covered in great detail in many pattern languages since the beginnings of the patterns movement, and service-oriented infrastructure design patterns have also been published in the last decade. However, the interface representations (i.e., the content of message payloads) have received less attention. We presented five structural representation patterns in our previous work; in this paper we continue our coverage of the API design space and propose five interface quality patterns that deal with the observable aspects of quality-attribute-driven interface design for efficiency, security, and manageability: An API Key allows API providers to identify clients. Providers may offer rich data contracts in their responses, which not all consumers might need. A Wish List allows the client to request only the attributes in a response data set that it is interested in. If a client makes many API calls, the provider can employ a Rate Limit and bill clients according to a specified Rate Plan. A provider has to provide a high-quality service while at the same time having to use its available resources economically. The resulting compromise is expressed in a provider's Service Level Agreement.","URL":"http://doi.acm.org/10.1145/3282308.3282319","DOI":"10.1145/3282308.3282319","ISBN":"978-1-4503-6387-7","title-short":"Interface Quality Patterns","author":[{"family":"Stocker","given":"Mirko"},{"family":"Zimmermann","given":"Olaf"},{"family":"Zdun","given":"Uwe"},{"family":"Lübke","given":"Daniel"},{"family":"Pautasso","given":"Cesare"}],"issued":{"date-parts":[[2018]]},"accessed":{"date-parts":[[2019,6,18]]},"publisher-place":"New York, NY, USA","event-place":"Irsee, Germany"},
  {"id":"breinerPEICSHCIPatterns2010","type":"paper-conference","title":"PEICS: Towards HCI Patterns into Engineering of Interactive Systems","container-title":"Proceedings of the 1st International Workshop on Pattern-Driven Engineering of Interactive Computing Systems","collection-title":"PEICS '10","publisher":"ACM","page":"1–3","source":"ACM Digital Library","abstract":"Despite intense research activities in the last years, HCI patterns still lack in a standardized description and organization. This makes it difficult for the developers to identify the relevant patterns for solving a problem as well as to apply them accordingly to the problem context. To fully benefit from HCI patterns within the engineering of interactive computer systems they have to be prepared for integration into a model-based user interface development process. This workshop on Pattern-driven Engineering of Interactive Computer Systems (PEICS) focuses on bringing together various research approaches in order to be conjointly conductive to the state of the art. We present contributions according to semantics, formalization, languages, support, research directions as well as tools.","URL":"http://doi.acm.org/10.1145/1824749.1824750","DOI":"10.1145/1824749.1824750","ISBN":"978-1-4503-0246-3","title-short":"PEICS","author":[{"family":"Breiner","given":"Kai"},{"family":"Seissler","given":"Marc"},{"family":"Meixner","given":"Gerrit"},{"family":"Forbrig","given":"Peter"},{"family":"Seffah","given":"Ahmed"},{"family":"Klöckner","given":"Kerstin"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Berlin, Germany"},
  {"id":"broschReliabilityPredictionFaulttolerant2011","type":"paper-conference","title":"Reliability Prediction for Fault-tolerant Software Architectures","container-title":"Proceedings of the Joint ACM SIGSOFT Conference – QoSA and ACM SIGSOFT Symposium – ISARCS on Quality of Software Architectures – QoSA and Architecting Critical Systems – ISARCS","collection-title":"QoSA-ISARCS '11","publisher":"ACM","page":"75–84","source":"ACM Digital Library","abstract":"Software fault tolerance mechanisms aim at improving the reliability of software systems. Their effectiveness (i.e., reliability impact) is highly application-specific and depends on the overall system architecture and usage profile. When examining multiple architecture configurations, such as in software product lines, it is a complex and error-prone task to include fault tolerance mechanisms effectively. Existing approaches for reliability analysis of software architectures either do not support modelling fault tolerance mechanisms or are not designed for an efficient evaluation of multiple architecture variants. We present a novel approach to analyse the effect of software fault tolerance mechanisms in varying architecture configurations. We have validated the approach in multiple case studies, including a large-scale industrial system, demonstrating its ability to support architecture design, and its robustness against imprecise input data.","URL":"http://doi.acm.org/10.1145/2000259.2000274","DOI":"10.1145/2000259.2000274","ISBN":"978-1-4503-0724-6","author":[{"family":"Brosch","given":"Franz"},{"family":"Buhnova","given":"Barbora"},{"family":"Koziolek","given":"Heiko"},{"family":"Reussner","given":"Ralf"}],"issued":{"date-parts":[[2011]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Boulder, Colorado, USA"},
  {"id":"chenBoostingEfficiencyFault2013","type":"paper-conference","title":"Boosting Efficiency of Fault Detection and Recovery Throughapplication-specific Comparison and Checkpointing","container-title":"Proceedings of the 14th ACM SIGPLAN/SIGBED Conference on Languages, Compilers and Tools for Embedded Systems","collection-title":"LCTES '13","publisher":"ACM","page":"13–20","source":"ACM Digital Library","abstract":"While the unending technology scaling has brought reliability to the forefront of concerns of semiconductor industry, fault tolerance techniques are still rarely incorporated into existing designs due to their high overhead. One fault tolerance scheme that receives a lot of research attention is duplication and checkpointing. However, most of the techniques in the category employ a blind strategy to compare instruction results, therefore not only generating large overhead in buffering and verifying these values, but also inducing unnecessary rollbacks to recover faults that will never influence subsequent execution. To tackle these issues, we introduce in this paper an approach that identifies the minimum set of instruction results for fault detection and checkpointing. For a given application, the proposed technique first identifies the control and data flow information of each execution hotspot, and then selects only the instruction results that either influence the final program results or are needed during re-execution as the comparison set. Our experimental studies demonstrate that the proposed hotspot-targeting technique is able to reduce nearly 88% of the comparison overhead and mask over 38% of the total injected faults of all the injected faults while at the same time delivering full fault coverage.","URL":"http://doi.acm.org/10.1145/2491899.2465562","DOI":"10.1145/2491899.2465562","ISBN":"978-1-4503-2085-6","author":[{"family":"Chen","given":"Hao"},{"family":"Yang","given":"Chengmo"}],"issued":{"date-parts":[[2013]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Seattle, Washington, USA"},
  {"id":"wegrzynowiczComprehensiveTestSuite2009","type":"paper-conference","title":"Towards a Comprehensive Test Suite for Detectors of Design Patterns","container-title":"Proceedings of the 2009 IEEE/ACM International Conference on Automated Software Engineering","collection-title":"ASE '09","publisher":"IEEE Computer Society","page":"103–110","source":"ACM Digital Library","abstract":"Detection of design patterns is an important part of reverse engineering. Availability of patterns provides for a better understanding of code and also makes analysis more efficient in terms of time and cost. In recent years, we have observed a continual improvement in the field of automatic detection of design patterns in source code. Existing approaches can detect a fairly broad range of design patterns, targeting both structural and behavioral aspects of patterns. However, it is not straightforward to assess and compare these approaches. There is no common ground on which to evaluate the accuracy of the detection approaches, given the existence of variants and specific code constructs used to implement a design pattern. We propose a systematic approach to constructing a comprehensive test suite for detectors of design patterns. This approach is applied to construct a test suite covering the Singleton pattern. The test suite contains many implementation variants of these patterns, along with such code constructs as method forwarding, access modifiers, and long inheritance paths. Furthermore, we use this test suite to compare three detection tools and to identify their strengths and weaknesses.","URL":"https://doi.org/10.1109/ASE.2009.85","DOI":"10.1109/ASE.2009.85","ISBN":"978-0-7695-3891-4","author":[{"family":"Wegrzynowicz","given":"Patrycja"},{"family":"Stencel","given":"Krzysztof"}],"issued":{"date-parts":[[2009]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"Washington, DC, USA"},
  {"id":"banerjeeEnergyawareDesignPatterns2014","type":"paper-conference","title":"Energy-aware Design Patterns for Mobile Application Development (Invited Talk)","container-title":"Proceedings of the 2Nd International Workshop on Software Development Lifecycle for Mobile","collection-title":"DeMobile 2014","publisher":"ACM","page":"15–16","source":"ACM Digital Library","abstract":"Developing energy-efficient application is crucial for mobile platforms such as smartphone and tablets, since such devices operate on a limited amount of battery power. However, until recently most of the smartphone applications have been developed in an energy-oblivious fashion. This is increasingly becoming a concern due to the fact that smartphone applications are progressively becoming complex and energy-intensive, whereas the battery technology is unable to keep up. Existing studies have proposed a number of testing and re-factoring techniques that can be used to increase the energy-efficiency of such applications, after the development has been completed. However, we feel that maximum level of energy-efficiency can be achieved only if energy-efficient design practices are used in the software development process. In this study, we propose a set of energy-aware design patterns, specifically targeted at smartphone applications. These design patterns can be applied to huge number of real-life scenarios for energy-efficient information gathering and processing, within the smartphone application. We also present some examples of design patterns for application development for the Android platform.","URL":"http://doi.acm.org/10.1145/2661694.2661698","DOI":"10.1145/2661694.2661698","ISBN":"978-1-4503-3225-5","author":[{"family":"Banerjee","given":"Abhijeet"},{"family":"Roychoudhury","given":"Abhik"}],"issued":{"date-parts":[[2014]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Hong Kong, China"},
  {"id":"dinhDistributedContainerDesign2009","type":"paper-conference","title":"Distributed Container: A Design Pattern for Fault Tolerance and High Speed Data Exchange","container-title":"Proceedings of the ACM SIGAda Annual International Conference on Ada and Related Technologies","collection-title":"SIGAda '09","publisher":"ACM","page":"115–118","source":"ACM Digital Library","abstract":"We describe a design patterns for achieving fast data transfer in a distributed system with a high reliability requirement. Also described are techniques for utilizing the Ada-95 serialization facilities in implementing the design patterns.","URL":"http://doi.acm.org/10.1145/1647420.1647445","DOI":"10.1145/1647420.1647445","ISBN":"978-1-60558-475-1","title-short":"Distributed Container","author":[{"family":"Dinh","given":"Tong"},{"family":"Barkataki","given":"Shan"}],"issued":{"date-parts":[[2009]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Saint Petersburg, Florida, USA"},
  {"id":"batarsehJavaNanoPatterns2010","type":"paper-conference","title":"Java Nano Patterns: A Set of Reusable Objects","container-title":"Proceedings of the 48th Annual Southeast Regional Conference","collection-title":"ACM SE '10","publisher":"ACM","page":"60:1–60:4","source":"ACM Digital Library","abstract":"Software patterns are used in many applications and domains. They reduce time, effort and cost as they increase reliability, reusability and testability when used for developing software systems. Although they have been criticized for their high level of abstraction, design patterns are the most commonplace patterns used. Furthermore, micro patterns are introduced in the literature. They have a lower level of abstraction and deal with Java software programs at the level of a class while design patterns describe the system design in general. In this paper, I am introducing a lower level of abstraction for Java patterns. Nano patterns are a group of reusable methods that are frequently used in Java software development. Sixteen nano patterns are defined into five groups, according to their privileges, nature and functionality. Additionally, I provide experimentation and initial results and conclude that nano patterns reduce more time, effort and cost for a Java-based software project.","URL":"http://doi.acm.org/10.1145/1900008.1900089","DOI":"10.1145/1900008.1900089","ISBN":"978-1-4503-0064-3","title-short":"Java Nano Patterns","author":[{"family":"Batarseh","given":"Feras"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Oxford, Mississippi"},
  {"id":"yunReducedComplexityDesign2010","type":"paper-conference","title":"A Reduced Complexity Design Pattern for Distributed Hierarchical Command and Control System","container-title":"Proceedings of the 1st ACM/IEEE International Conference on Cyber-Physical Systems","collection-title":"ICCPS '10","publisher":"ACM","page":"42–49","source":"ACM Digital Library","abstract":"Cyber Physical Systems (CPS) get a lot of attention due to the strong demand for the integration of physical devices and computing systems. There are many design aspects involved in CPS, such as efficiency, real-time, reliability and security. One of the major issues is system integration and verification. In many safety critical systems verification plays an essential role in system design. However, the high complexity for the composition of diverse systems is a major challenge for system verification. In this paper, we focus on command and control systems for search and rescue missions and propose a systematic design pattern called Interruptible RPC to compose complex systems while keeping the verification costs low. This has been made possible due to the reduced state space of the systems designed using our pattern. Therefore, the system models can be efficiently verified using available verification tools. In our experiments, the search and rescue system based on Interruptible RPC pattern had fewer states than the asynchronous one by several orders of magnitude.","URL":"http://doi.acm.org/10.1145/1795194.1795201","DOI":"10.1145/1795194.1795201","ISBN":"978-1-4503-0066-7","author":[{"family":"Yun","given":"Heechul"},{"family":"Wu","given":"Po-Liang"},{"family":"Rahmaniheris","given":"Maryam"},{"family":"Kim","given":"Cheolgi"},{"family":"Sha","given":"Lui"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Stockholm, Sweden"},
  {"id":"murphy-hillEvaluationUsabilityProgramming2010","type":"paper-conference","title":"Evaluation and Usability of Programming Languages and Tools (PLATEAU)","container-title":"Proceedings of the ACM International Conference Companion on Object Oriented Programming Systems Languages and Applications Companion","collection-title":"OOPSLA '10","publisher":"ACM","page":"265–266","source":"ACM Digital Library","abstract":"Programming languages exist to enable programmers to develop software effectively. But how efficiently programmers can write software depends on the usability of the languages and tools that they develop with. The aim of this workshop is to discuss methods, metrics and techniques for evaluating the usability of languages and language tools. The supposed benefits of such languages and tools cover a large space, including making programs easier to read, write, and maintain; allowing programmers to write more flexible and powerful programs; and restricting programs to make them more safe and secure. We plan to gather the intersection of researchers in the programming language, programming tool, and human-computer interaction communities to share their research and discuss the future of evaluation and usability of programming languages and tools. We are also interested in the input of other members of the programming research community working on related areas, such as refactoring, design patterns, program analysis, program comprehension, software visualization, end-user programming, and other programming language paradigms.","URL":"http://doi.acm.org/10.1145/1869542.1869605","DOI":"10.1145/1869542.1869605","ISBN":"978-1-4503-0240-1","author":[{"family":"Murphy-Hill","given":"Emerson"},{"family":"Markstrum","given":"Shane"},{"family":"Anslow","given":"Craig"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Reno/Tahoe, Nevada, USA"},
  {"id":"inostrozaMappingUsabilityHeuristics2014","type":"paper-conference","title":"Mapping Usability Heuristics and Design Principles for Touchscreen-based Mobile Devices","container-title":"Proceedings of the 7th Euro American Conference on Telematics and Information Systems","collection-title":"EATIS '14","publisher":"ACM","page":"27:1–27:4","source":"ACM Digital Library","abstract":"Touchscreen-based mobile devices (TMDs) are one of the most popular and widespread kind of electronic device. Many manufacturers have published its own design principles as a guideline for developers. Each platform has specific constrains and recommendations for software development; specially in terms of user interface. Four sets of design principles from iOS, Windows Phone, Android and Tizen OS has been mapped against a set of usability heuristics for TMDs. The map shows that the TMDs usability heuristics cover almost every design pattern with the addition of two new dimensions: user experience and cognitive load. These new dimensions will be considered when updating the proposal of usability heuristics for TMDs.","URL":"http://doi.acm.org/10.1145/2590651.2590677","DOI":"10.1145/2590651.2590677","ISBN":"978-1-4503-2435-9","author":[{"family":"Inostroza","given":"Rodolfo"},{"family":"Rusu","given":"Cristian"}],"issued":{"date-parts":[[2014]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Valparaiso, Chile"},
  {"id":"vanloggemWhatMakesDesign2016","type":"paper-conference","title":"What Makes a Design Pattern Language?: Value System and Organizing Principle","container-title":"Proceedings of the 21st European Conference on Pattern Languages of Programs","collection-title":"EuroPlop '16","publisher":"ACM","page":"9:1–9:13","source":"ACM Digital Library","abstract":"This paper explores the question of how design patterns could be combined into and presented as a design pattern language, to meet the requirements of the two stakeholder groups in any design community: practicing designers, and those that record design knowledge for the former group to use. My personal interest is in design patterns in the field of user documentation for software. The second part of this paper illustrates the theoretical first part by presenting one pattern taken from a Software Documentation Design Pattern Language (SDDPL) that I developed in the course of my PhD thesis. It needs to be stressed, however, that this paper is not about one particular design pattern language, but rather about what makes a design pattern language in general; and how one could be constructed based on considerations of applicability and usability.","URL":"http://doi.acm.org/10.1145/3011784.3011793","DOI":"10.1145/3011784.3011793","ISBN":"978-1-4503-4074-8","title-short":"What Makes a Design Pattern Language?","author":[{"family":"Van Loggem","given":"Brigit"}],"issued":{"date-parts":[[2016]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Kaufbeuren, Germany"},
  {"id":"nanthaamornphongPilotStudyDesign2013","type":"paper-conference","title":"A Pilot Study: Design Patterns in Parallel Program Development","container-title":"Proceedings of the 1st International Workshop on Software Engineering for High Performance Computing in Computational Science and Engineering","collection-title":"SE-HPCCSE '13","publisher":"ACM","page":"17–20","source":"ACM Digital Library","abstract":"The software engineering community has widely used design patterns to solve software design problems and improve software development. However, there is little evidence about whether the use of design patterns has the same effect in a parallel computing environment. The growth of high-performance computing (HPC) has been achieved through massive parallelization. This paper presents a pilot controlled experiment with an objective to verify the experimental design and instrumentation. The study assessed the usability of design pattern implementations versus alternative implementations of the parallel program implemented with the Message Passing Interface (MPI). This paper describes the research questions, hypotheses and experimental design. The collected data indicated that the study design and materials produced the necessary results to be able to analyze and answer the research questions. Additionally, this paper discusses lessons learned from the experiment in order to be useful for the full-scale study.","URL":"http://doi.acm.org/10.1145/2532352.2532355","DOI":"10.1145/2532352.2532355","ISBN":"978-1-4503-2499-1","title-short":"A Pilot Study","author":[{"family":"Nanthaamornphong","given":"Aziz"}],"issued":{"date-parts":[[2013]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Denver, Colorado"},
  {"id":"nguyenGenerativePatternsDesigning2016","type":"paper-conference","title":"Generative Patterns for Designing Multiple User Interfaces","container-title":"Proceedings of the International Conference on Mobile Software Engineering and Systems","collection-title":"MOBILESoft '16","publisher":"ACM","page":"151–159","source":"ACM Digital Library","abstract":"End users interacting with mobile services through a wide diversity of mobile devices and platforms inevitably endure various user experiences when no consistency is ensured across these devices and platforms. Developing the same service for heterogeneous devices remains a challenging task: how to ensure that the service will provide end users with the same level of user experience or at least a common minimum level of usability across software development and deployment platforms. This paper addresses this problem by introducing a generative design pattern-based approach for cross-device services: a design pattern captures frequent interactive behaviors at a higher level of abstraction than the code level, the selection of such a design pattern is then subject to parametrization so as to drive a code generation process. The pattern is not only considered descriptive, since it specifies a consistent user experience across devices, but also generative because it ensures some consistency across different devices and platforms since the pattern is instantiated in the same way for each device or platform. To exemplify this process, the master-details design pattern is detailed and illustrated on a case study for a car rental mobile service. A pilot study conducted with thirty-two participants suggests that this is a viable approach for quickly producing multi-devices services, with limited development effort, but also with limited variability.","URL":"http://doi.acm.org/10.1145/2897073.2897084","DOI":"10.1145/2897073.2897084","ISBN":"978-1-4503-4178-3","author":[{"family":"Nguyen","given":"Thanh-Diane"},{"family":"Vanderdonckt","given":"Jean"},{"family":"Seffah","given":"Ahmed"}],"issued":{"date-parts":[[2016]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Austin, Texas"},
  {"id":"jimenezFormalSpecificationUsability2012","type":"paper-conference","title":"Formal Specification of Usability Heuristics: How Convenient It is?","container-title":"Proceedings of the 2Nd International Workshop on Evidential Assessment of Software Technologies","collection-title":"EAST '12","publisher":"ACM","page":"55–60","source":"ACM Digital Library","abstract":"The challenge of developing highly usable interactive software systems has motivated several researchers to focus on providing new elements for designing and evaluating usability. The use of interaction and usability design patterns has been promoted to achieve this. A proposal to formally specify a new set of usability heuristics to be used in a heuristic inspection has appeared. It is still arguable if formal specification of such heuristics improves the performance of usability evaluations. This paper discusses the relevance of the use of patterns in the specification of usability heuristics, based on empirical evidence collected through query techniques. The results showed that formal specification of usability heuristics through patterns could facilitate the heuristic evaluations, regardless the evaluators' experience.","URL":"http://doi.acm.org/10.1145/2372233.2372249","DOI":"10.1145/2372233.2372249","ISBN":"978-1-4503-1509-8","title-short":"Formal Specification of Usability Heuristics","author":[{"family":"Jimenez","given":"Cristhy"},{"family":"Rusu","given":"Cristian"},{"family":"Rusu","given":"Virginica"},{"family":"Roncagliolo","given":"Silvana"},{"family":"Inostroza","given":"Rodolfo"}],"issued":{"date-parts":[[2012]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Lund, Sweden"},
  {"id":"zhangUsingFollowonSurvey2012","type":"paper-conference","title":"Using a Follow-on Survey to Investigate Why Use of the Visitor, Singleton & Facade Patterns is Controversial","container-title":"Proceedings of the ACM-IEEE International Symposium on Empirical Software Engineering and Measurement","collection-title":"ESEM '12","publisher":"ACM","page":"79–88","source":"ACM Digital Library","abstract":"Context: A previous study has shown that software developers who are experienced with using design patterns hold some conflicting opinions about three of the more popular design patterns: Facade, Singleton and Visitor. Aim: To identify the characteristics of these three patterns that have caused them to generate such differing views. Method: We employed a qualitative follow-on survey of those developers who had taken part in the earlier survey about design patterns. Results: We received 46 usable responses from a possible total of 188, with nearly 85% of respondents having six or more years of experience with design patterns. Of these, 27 also provided comments and descriptions of experiences about the patterns, which we categorised. Conclusions: All three patterns can easily be misused and in each case, the consequences of misuse are regarded as being particularly significant.","URL":"http://doi.acm.org/10.1145/2372251.2372264","DOI":"10.1145/2372251.2372264","ISBN":"978-1-4503-1056-7","author":[{"family":"Zhang","given":"Cheng"},{"family":"Budgen","given":"David"},{"family":"Drummond","given":"Sarah"}],"issued":{"date-parts":[[2012]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Lund, Sweden"},
  {"id":"ginigeUserRequirementsWeb2010","type":"paper-conference","title":"User Requirements for a Web Based Spreadsheet-mediated Collaboration","container-title":"Proceedings of the International Conference on Advanced Visual Interfaces","collection-title":"AVI '10","publisher":"ACM","page":"133–136","source":"ACM Digital Library","abstract":"This paper reports the initial results of a research project to investigate how to develop a web based spreadsheet mediated business collaboration system that could notably enhance the business processes presently carried out by Small to Medium sized Enterprises. Using a scenario-based design approach, a set of user's requirements were extracted from an appropriate field study. These requirements were then analysed in the context of well-known usability principles, and a set of design implications were derived based on a selected set of HCI design patterns related to cooperative interaction design. Starting from that knowledge, suitable interactive collaboration scenarios have been drawn, from which a list of user interface requirements for a web based spreadsheet mediated collaboration system has been formulated.","URL":"http://doi.acm.org/10.1145/1842993.1843017","DOI":"10.1145/1842993.1843017","ISBN":"978-1-4503-0076-6","author":[{"family":"Ginige","given":"Athula"},{"family":"Paolino","given":"Luca"},{"family":"Sebillo","given":"Monica"},{"family":"Shrodkar","given":"Richa"},{"family":"Vitiello","given":"Giuliana"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Roma, Italy"},
  {"id":"blomqvistExperimentsPatternbasedOntology2009","type":"paper-conference","title":"Experiments on Pattern-based Ontology Design","container-title":"Proceedings of the Fifth International Conference on Knowledge Capture","collection-title":"K-CAP '09","publisher":"ACM","page":"41–48","source":"ACM Digital Library","abstract":"This paper addresses the evaluation of pattern-based ontology design through experiments. An initial method for reuse of content ontology design patterns (Content ODPs) was used by the participants during the experiments. Hypotheses considered include the usefulness of Content ODPs for ontology developers, and we additionally study in what respects they are useful and what open issues remain. The main positive conclusions when using Content ODPs include: ontology developers perceived them as useful, ontology quality is improved, coverage of the task increases, usability is improved, and common modelling mistakes can be avoided.","URL":"http://doi.acm.org/10.1145/1597735.1597743","DOI":"10.1145/1597735.1597743","ISBN":"978-1-60558-658-8","author":[{"family":"Blomqvist","given":"Eva"},{"family":"Gangemi","given":"Aldo"},{"family":"Presutti","given":"Valentina"}],"issued":{"date-parts":[[2009]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Redondo Beach, California, USA"},
  {"id":"anslowEvaluationUsabilityProgramming2011","type":"paper-conference","title":"Evaluation and Usability of Programming Languages and Tools: (PLATEAU)","container-title":"Proceedings of the 10th SIGPLAN Symposium on New Ideas, New Paradigms, and Reflections on Programming and Software","collection-title":"Onward! 2011","publisher":"ACM","page":"119–120","source":"ACM Digital Library","abstract":"Programming languages exist to enable programmers to develop software effectively. But how efficiently programmers can write software depends on the usability of the languages and tools that they develop with. The aim of this workshop is to discuss methods, metrics and techniques for evaluating the usability of languages and language tools. The supposed benefits of such languages and tools cover a large space, including making programs easier to read, write, and maintain; allowing programmers to write more flexible and powerful programs; and restricting programs to make them more safe and secure. We plan to gather the intersection of researchers in the programming language, programming tool, and human-computer interaction communities to share their research and discuss the future of evaluation and usability of programming languages and tools. We are also interested in the input of other members of the programming research community working on related areas, such as refactoring, design patterns, program analysis, program comprehension, software visualization, end-user programming, and other programming language paradigms.","URL":"http://doi.acm.org/10.1145/2048237.2048258","DOI":"10.1145/2048237.2048258","ISBN":"978-1-4503-0941-7","title-short":"Evaluation and Usability of Programming Languages and Tools","author":[{"family":"Anslow","given":"Craig"},{"family":"Markstrum","given":"Shane"},{"family":"Murphy-Hill","given":"Emerson"}],"issued":{"date-parts":[[2011]]},"accessed":{"date-parts":[[2019,6,17]]},"publisher-place":"New York, NY, USA","event-place":"Portland, Oregon, USA"},
  {"id":"harmsGuidelinesAdoptingFrontend2017","type":"paper-conference","title":"Guidelines for Adopting Frontend Architectures and Patterns in Microservices-based Systems","container-title":"Proceedings of the 2017 11th Joint Meeting on Foundations of Software Engineering","collection-title":"ESEC/FSE 2017","publisher":"ACM","page":"902–907","source":"ACM Digital Library","abstract":"Microservice-based systems enable the independent development, deployment, and scalability for separate system components of enterprise applications. A significant aspect during development is the microservice integration in frontends of web, mobile, and desktop applications. One challenge here is the selection of an adequate frontend architecture as well as suitable patterns that satisfy the application requirements. This paper analyses available strategies for organizing and implementing microservices frontends. These approaches are then evaluated based on a quality model and various prototypes of the same application implemented using the distinct approaches. The results of this analysis are generalized to a guideline that supports the selection of a suitable architecture.","URL":"http://doi.acm.org/10.1145/3106237.3117775","DOI":"10.1145/3106237.3117775","ISBN":"978-1-4503-5105-8","author":[{"family":"Harms","given":"Holger"},{"family":"Rogowski","given":"Collin"},{"family":"Lo Iacono","given":"Luigi"}],"issued":{"date-parts":[[2017]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Paderborn, Germany"},
  {"id":"carvajalUsabilityenablingGuidelinesDesign2009","type":"paper-conference","title":"Usability-enabling Guidelines: A Design Pattern and Software Plug-in Solution","container-title":"Proceedings of the Doctoral Symposium for ESEC/FSE on Doctoral Symposium","collection-title":"ESEC/FSE Doctoral Symposium '09","publisher":"ACM","page":"9–12","source":"ACM Digital Library","abstract":"This doctoral thesis addresses the difficulties associated with building usable software. In particular, it deals with the open problem of providing users with artifacts that enable them to design and implement usability mechanisms, focusing on those that have high implications on software functionality. The artifacts we propose will be referred to as usability-enabling guidelines. Ultimately, usability design patterns and plug-ins will be the most relevant products of our contribution. Our results will be complemented with an estimation of the costs associated with the inclusion of each usability mechanism into software through the use of our artifacts.","URL":"http://doi.acm.org/10.1145/1595782.1595786","DOI":"10.1145/1595782.1595786","ISBN":"978-1-60558-731-8","title-short":"Usability-enabling Guidelines","author":[{"family":"Carvajal","given":"Laura"}],"issued":{"date-parts":[[2009]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Amsterdam, The Netherlands"},
  {"id":"inostrozaDesignPatternsTouchscreenbased2013","type":"paper-conference","title":"Design Patterns for Touchscreen-based Mobile Devices: Users Above All!","container-title":"Proceedings of the 2013 Chilean Conference on Human - Computer Interaction","collection-title":"ChileCHI '13","publisher":"ACM","page":"50–51","source":"ACM Digital Library","abstract":"Touchscreen-based mobile devices are very popular and the development of new devices and applications is demanded. Usability is critical for users when deciding which product to buy; it must be considered when designing the interface of new interactive products. This is why we propose a (preliminary) set of 7 design patterns for touchscreen-based mobile devices. This proposal is based on empirical evidence gathered from previously performed experiments.","URL":"http://doi.acm.org/10.1145/2535597.2535616","DOI":"10.1145/2535597.2535616","ISBN":"978-1-4503-2200-3","title-short":"Design Patterns for Touchscreen-based Mobile Devices","author":[{"family":"Inostroza","given":"Rodolfo"},{"family":"Rusu","given":"Cristian"},{"family":"Roncaliolo","given":"Silvana"},{"family":"Rusu","given":"Virginica"}],"issued":{"date-parts":[[2013]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Temuco, Chile"},
  {"id":"reulBringingUsabilityIndustrial2009","type":"paper-conference","title":"Bringing Usability to Industrial Control Systems","container-title":"CHI '09 Extended Abstracts on Human Factors in Computing Systems","collection-title":"CHI EA '09","publisher":"ACM","page":"3335–3340","source":"ACM Digital Library","abstract":"I want to examine how domain-specific HCI design patterns can be introduced into an existing software development process for industrial test systems. This paper describes the first findings of a contextual inquiry in the domain of test automation systems. Based on these results, I will collect a set of patterns that are relevant to the field. In the future, these patterns will be applied in a real development process. The final aim is to investigate how the patterns can help the developers and product managers to make design decisions for the user interfaces of the developed software.","URL":"http://doi.acm.org/10.1145/1520340.1520482","DOI":"10.1145/1520340.1520482","ISBN":"978-1-60558-247-4","author":[{"family":"Reul","given":"Marcus"}],"issued":{"date-parts":[[2009]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Boston, MA, USA"},
  {"id":"kruschitzAnalyzingHCIDesign2010","type":"paper-conference","title":"Analyzing the HCI Design Pattern Variety","container-title":"Proceedings of the 1st Asian Conference on Pattern Languages of Programs","collection-title":"AsianPLoP '10","publisher":"ACM","page":"6:1–6:8","source":"ACM Digital Library","abstract":"Human-Computer Interaction (HCI) design patterns are an often used tool for developing user interfaces. They render the communication among stakeholders more efficient and allow for a faster design of user interfaces. However, today there exists a vast amount of patterns written by many different authors, published on Web repositories, in scientific papers, and books. This causes the form or structure of the patterns to vary according to the authors' preferences. This paper presents the results of a survey that analyses the structure and relationships of HCI design patterns from 21 different design pattern resources.","URL":"http://doi.acm.org/10.1145/2371736.2371745","DOI":"10.1145/2371736.2371745","ISBN":"978-1-4503-0126-8","author":[{"family":"Kruschitz","given":"Christian"},{"family":"Hitz","given":"Martin"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Tokyo, Japan"},
  {"id":"botellaNewProposalImproving2013","type":"paper-conference","title":"A New Proposal for Improving Heuristic Evaluation Reports Performed by Novice Evaluators","container-title":"Proceedings of the 2013 Chilean Conference on Human - Computer Interaction","collection-title":"ChileCHI '13","publisher":"ACM","page":"72–75","source":"ACM Digital Library","abstract":"In this paper, we propose a new approach to improve the results of the heuristics evaluation performed by novice evaluators combining the classical usability reports with the interaction pattern design in concrete types of usability problems. Normally, usability reports generated by experts or by any automatic tool are limited to a list of problems detected with qualitative and quantitative data plus graphics or simple suggestions for solving detected problems. Sometimes these suggestions are not sufficient to fix the detected problem, as the designer is not able to capture or reproduce the problem. Our proposal will provide support to designers, trying to unify the recommendations offered by evaluators introducing the concept of design patterns in the report. In this manner, the final report could be enriched with one design pattern for some of the detected usability problems, thus enabling a better understanding of the detected issue by designers.","URL":"http://doi.acm.org/10.1145/2535597.2535601","DOI":"10.1145/2535597.2535601","ISBN":"978-1-4503-2200-3","author":[{"family":"Botella","given":"Federico"},{"family":"Alarcon","given":"Eloy"},{"family":"Peñalver","given":"Antonio"}],"issued":{"date-parts":[[2013]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Temuco, Chile"},
  {"id":"seisslerPEICSHCIPatterns2011","type":"paper-conference","title":"PEICS: HCI Patterns for the Design of Interactive Systems","container-title":"Proceedings of the 2Nd International Workshop on Pattern-Driven Engineering of Interactive Computing Systems","collection-title":"PEICS '11","publisher":"ACM","page":"1–3","source":"ACM Digital Library","abstract":"In this paper, we summarize the results of the Pattern Driven Engineering of Interactive Computing Systems (PEICS) which took place at the 3rd ACM SIGCHI Symposium on Engineering Interactive Computing Systems (EICS) 2011.","URL":"http://doi.acm.org/10.1145/2018431.2018432","DOI":"10.1145/2018431.2018432","ISBN":"978-1-4503-0856-4","title-short":"PEICS","author":[{"family":"Seissler","given":"Marc"},{"family":"Meixner","given":"Gerrit"},{"family":"Seffah","given":"Ahmed"},{"family":"Breiner","given":"Kai"},{"family":"Forbrig","given":"Peter"},{"family":"Klöckner","given":"Kerstin"}],"issued":{"date-parts":[[2011]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Pisa, Italy"},
  {"id":"seffahEvolutionDesignPatterns2010","type":"paper-conference","title":"The Evolution of Design Patterns in HCI: From Pattern Languages to Pattern-oriented Design","container-title":"Proceedings of the 1st International Workshop on Pattern-Driven Engineering of Interactive Computing Systems","collection-title":"PEICS '10","publisher":"ACM","page":"4–9","source":"ACM Digital Library","abstract":"User interface design patterns also called HCI or interaction or usability patterns have been introduced first as a medium to capture and represent solutions to users' problems. Patterns have been used also as a medium for transferring the expertise of HCI designers and usability professionals to software engineers, who are usually unfamiliar with UI design and usability principles. Design patterns have been considered also as a lingua franca for crossing cultural and professional barriers between different stakeholders. Several HCI professionals have introduced their own pattern languages with specific terminology, classification and meanings. Patterns have also been presented as building reusable blocks at different levels of granularity, which can be combined to compose new interactive systems. Despite the obvious and acclaimed potential of these pattern-driven design approaches, patterns usage has not achieved the acceptance and widespread applicability envisaged by pattern pioneers such as Christopher Alexander. This paper provides an analysis of the facts about patterns usages, pattern languages and pattern-based design approaches. Some shortcomings in the presentation and application of HCI patterns are identified and discussed under the prevailing fallacies. Based on the analysis of how patterns have used so far, we draw some recommendations and future perspectives on what can be done to address the existing shortcomings. Making patterns more accessible, easily understandable, comparable and integratable in software and HCI design tools can promote HCI patterns to claim the usability, usefulness and importance originally envisaged for the pattern-oriented design approach.","URL":"http://doi.acm.org/10.1145/1824749.1824751","DOI":"10.1145/1824749.1824751","ISBN":"978-1-4503-0246-3","title-short":"The Evolution of Design Patterns in HCI","author":[{"family":"Seffah","given":"Ahmed"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,14]]},"publisher-place":"New York, NY, USA","event-place":"Berlin, Germany"},
  {"id":"christensenDistributedUsabilityEvaluation2010","type":"paper-conference","title":"Distributed Usability Evaluation: Enabling Large-scale Usability Evaluation with User-controlled Instrumentation","container-title":"Proceedings of the 6th Nordic Conference on Human-Computer Interaction: Extending Boundaries","collection-title":"NordiCHI '10","publisher":"ACM","page":"118–127","source":"ACM Digital Library","abstract":"We present DUE (Distributed Usability Evaluation), a technique for collecting and evaluating usability data. The DUE infrastructure involves a client-server network. A client-based tool resides on the workstation of each user, providing a screen video recording, microphone input of voice commentary, and a window for a severity rating. The idea is for the user to work naturalistically, clicking a button when a usability problem or point of uncertainty is encountered, to describe it verbally along with illustrating it on screen, and to rate its severity. These incidents are accumulated on a server, providing access to an evaluator (usability expert) and to product developers or managers who want to review the incidents and analyse them. DUE supports evaluation in the development stages from running prototypes and onwards. A case study of the use of DUE in a corporate environment is presented. The study indicates that the DUE technique is effective in terms of low bias, high efficiency, and clear communication of usability issues among users, evaluators and developers. Further, DUE is supporting long-term evaluations making possible empirical studies of learnability.","URL":"http://doi.acm.org/10.1145/1868914.1868932","DOI":"10.1145/1868914.1868932","ISBN":"978-1-60558-934-3","title-short":"Distributed Usability Evaluation","author":[{"family":"Christensen","given":"Lars"},{"family":"Frøkj\\a er","given":"Erik"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,13]]},"publisher-place":"New York, NY, USA","event-place":"Reykjavik, Iceland"},
  {"id":"bielUsabilityimprovingMobileApplication2010","type":"paper-conference","title":"Usability-improving Mobile Application Development Patterns","container-title":"Proceedings of the 15th European Conference on Pattern Languages of Programs","collection-title":"EuroPLoP '10","publisher":"ACM","page":"11:1–11:5","source":"ACM Digital Library","abstract":"The fast evolution of mobile devices and their complex functionalities require an improvement of the design process applied: Using patterns allows to document and use up to date and already proven solutions. This paper introduces two usability-improving mobile application development patterns for software designers of mobile applications that run on mobile devices with no or infrequent access to remote logic or data storage. We present a client-side solution for the design of usable applications for heterogenous devices and a mobile application usability test suite.","URL":"http://doi.acm.org/10.1145/2328909.2328923","DOI":"10.1145/2328909.2328923","ISBN":"978-1-4503-0259-3","author":[{"family":"Biel","given":"Bettina"},{"family":"Gruhn","given":"Volker"}],"issued":{"date-parts":[[2010]]},"accessed":{"date-parts":[[2019,6,13]]},"publisher-place":"New York, NY, USA","event-place":"Irsee, Germany"},
  {"id":"barakiInterdisciplinaryDesignPatterns2015","type":"paper-conference","title":"Interdisciplinary Design Patterns for Socially Aware Computing","container-title":"2015 IEEE/ACM 37th IEEE International Conference on Software Engineering","page":"477-486","volume":"2","source":"IEEE Xplore","event":"2015 IEEE/ACM 37th IEEE International Conference on Software Engineering","abstract":"The success of software applications that collect and process personal data does not only depend on technical aspects, but is also linked to social compatibility and user acceptance. It requires experts from different disciplines to ensure legal compliance, to foster the users' trust, to enhance the usability of the application and to finally realize the application. Multidisciplinary requirements have to be formulated, interwoven and implemented. We advocate the use of interdisciplinary design patterns that capture the design know-how of typical, recurring features in socially aware applications with particular concern for socio-technical requirements. The proposed patterns address interdisciplinary concerns in a tightly interwoven manner and are intended to facilitate the development of accepted and acceptable applications that in particular deal with sensitive user context information.","DOI":"10.1109/ICSE.2015.180","author":[{"family":"Baraki","given":"H."},{"family":"Geihs","given":"K."},{"family":"Voigtmann","given":"C."},{"family":"Hoffmann","given":"A."},{"family":"Kniewel","given":"R."},{"family":"Macek","given":"B."},{"family":"Zirfas","given":"J."}],"issued":{"date-parts":[[2015,5]]}},
  {"id":"maalejPatternsKnowledgeAPI2013","type":"article-journal","title":"Patterns of Knowledge in API Reference Documentation","container-title":"IEEE Transactions on Software Engineering","page":"1264-1282","volume":"39","issue":"9","source":"IEEE Xplore","abstract":"Reading reference documentation is an important part of programming with application programming interfaces (APIs). Reference documentation complements the API by providing information not obvious from the API syntax. To improve the quality of reference documentation and the efficiency with which the relevant information it contains can be accessed, we must first understand its content. We report on a study of the nature and organization of knowledge contained in the reference documentation of the hundreds of APIs provided as a part of two major technology platforms: Java SDK 6 and .NET 4.0. Our study involved the development of a taxonomy of knowledge types based on grounded methods and independent empirical validation. Seventeen trained coders used the taxonomy to rate a total of 5,574 randomly sampled documentation units to assess the knowledge they contain. Our results provide a comprehensive perspective on the patterns of knowledge in API documentation: observations about the types of knowledge it contains and how this knowledge is distributed throughout the documentation. The taxonomy and patterns of knowledge we present in this paper can be used to help practitioners evaluate the content of their API documentation, better organize their documentation, and limit the amount of low-value content. They also provide a vocabulary that can help structure and facilitate discussions about the content of APIs.","DOI":"10.1109/TSE.2013.12","ISSN":"0098-5589","author":[{"family":"Maalej","given":"W."},{"family":"Robillard","given":"M. P."}],"issued":{"date-parts":[[2013,9]]}},
  {"id":"yinAllocatingRedundancyReusable2011","type":"paper-conference","title":"Allocating redundancy with reusable patterns for optimal hierarchical-system reliability and series MTBF","container-title":"2011 Proceedings - Annual Reliability and Maintainability Symposium","page":"1-6","source":"IEEE Xplore","event":"2011 Proceedings - Annual Reliability and Maintainability Symposium","abstract":"A redundancy allocation method based on reusable patterns to optimize system reliability and maintainability (via series MTBF) is presented. Reusable patterns are “learned experiences” that are traceable and can enhance computational efficiency. This paper addresses the essential issues of this approach, and examples are implemented using object-oriented C++.","DOI":"10.1109/RAMS.2011.5754469","author":[{"family":"Yin","given":"M."},{"family":"Angus","given":"J."},{"family":"Arellano","given":"R."}],"issued":{"date-parts":[[2011,1]]}},
  {"id":"cuiResearchPHPDevelopment2009","type":"paper-conference","title":"The Research of PHP Development Framework Based on MVC Pattern","container-title":"2009 Fourth International Conference on Computer Sciences and Convergence Information Technology","page":"947-949","source":"IEEE Xplore","event":"2009 Fourth International Conference on Computer Sciences and Convergence Information Technology","abstract":"PHP is one of the leading Web development languages, however, the development model of existing PHP organizes without a structure, which mixes the code of data access, the processing of business logic , and Web presentation layer together, as a relult, it brought about many problems in the Web applications , meanwhile, it could not meet the rapid development of Web apply any more. In this paper, a implementation of PHP based on MVC design patterns - FDF framework was provided for PHP developers, which can offer a framework for Web applications, separate the data, view and control of Web applications, afford to achieve loose coupling, thereby enhanced the efficiency, reliability, maintainability and scalability of application development.","DOI":"10.1109/ICCIT.2009.130","author":[{"family":"Cui","given":"W."},{"family":"Huang","given":"L."},{"family":"Liang","given":"L."},{"family":"Li","given":"J."}],"issued":{"date-parts":[[2009,11]]}},
  {"id":"lunaUsingDesignPatterns2015","type":"article-journal","title":"Using Design Patterns as Usability Heuristics for Mobile Groupware Systems","container-title":"IEEE Latin America Transactions","page":"4004-4010","volume":"13","issue":"12","source":"IEEE Xplore","abstract":"The objective of this research was to determine the capability of design patterns to find usability issues in mobile groupware interfaces. A particular collection of patterns was used for this purpose. Patterns were obtained by identifying essential activities and collaborative tasks in the communication process among members of working groups. A previous study on said proposal suggested that design solutions offered by the patterns foster communication, collaboration, and coordination through user interface elements. This new analysis evaluated virtues of the proposal from a user interface-assessment perspective. For this purpose 6 experts on design, usability, HCI and UCD validated the heuristics, which were then applied by 12 members of an educational support group called USAER. Results suggested that proposed heuristics could provide a reliable perspective of the usability level of mobile user interfaces for groupware applications.","DOI":"10.1109/TLA.2015.7404939","ISSN":"1548-0992","author":[{"family":"Luna","given":"H."},{"family":"Mendoza","given":"R."},{"family":"Vargas","given":"M."},{"family":"Munoz","given":"J."},{"family":"Alvarez","given":"F. J."},{"family":"Rodriguez","given":"L. C."}],"issued":{"date-parts":[[2015,12]]}},
  {"id":"liuStudyGUIOriented2015","type":"paper-conference","title":"Study of GUI oriented software reliability accelerated testing method","container-title":"2015 First International Conference on Reliability Systems Engineering (ICRSE)","page":"1-6","source":"IEEE Xplore","event":"2015 First International Conference on Reliability Systems Engineering (ICRSE)","abstract":"Software reliability accelerated testing method is used to improve the effectiveness and efficiency of software reliability testing, the main purpose is to reduce the cost of software reliability testing and provide credible reliability evaluation results. The characteristics of the software reliability accelerated testing method which is suitable for GUIs are summarized in this paper. Based on the thought of operation classification, a reliability accelerated testing method based on classification is proposed. It provides a solution to evaluate software reliability of GUIs by calculating the failure data obtained from GUI software reliability testing. Through the verification of a practical example, the method can effectively improve the efficiency of GUI software reliability testing and ensure the accuracy of reliability evaluation results.","DOI":"10.1109/ICRSE.2015.7366479","author":[{"family":"Liu","given":"Q."},{"family":"Wu","given":"Y."},{"family":"Lu","given":"M."}],"issued":{"date-parts":[[2015,10]]}},
  {"id":"groenUsersHiddenSoftware2017","type":"paper-conference","title":"Users — The Hidden Software Product Quality Experts?: A Study on How App Users Report Quality Aspects in Online Reviews","container-title":"2017 IEEE 25th International Requirements Engineering Conference (RE)","page":"80-89","source":"IEEE Xplore","event":"2017 IEEE 25th International Requirements Engineering Conference (RE)","abstract":"[Context and motivation] Research on eliciting requirements from a large number of online reviews using automated means has focused on functional aspects. Assuring the quality of an app is vital for its success. This is why user feedback concerning quality issues should be considered as well [Question/problem] But to what extent do online reviews of apps address quality characteristics? And how much potential is there to extract such knowledge through automation? [Principal ideas/results] By tagging online reviews, we found that users mainly write about \"usability\" and \"reliability\", but the majority of statements are on a subcharacteristic level, most notably regarding \"operability\", \"adaptability\", \"fault tolerance\", and \"interoperability\". A set of 16 language patterns regarding \"usability\" correctly identified 1,528 statements from a large dataset far more efficiently than our manual analysis of a small subset. [Contribution] We found that statements can especially be derived from online reviews about qualities by which users are directly affected, although with some ambiguity. Language patterns can identify statements about qualities with high precision, though the recall is modest at this time. Nevertheless, our results have shown that online reviews are an unused Big Data source for quality requirements.","DOI":"10.1109/RE.2017.73","title-short":"Users — The Hidden Software Product Quality Experts?","author":[{"family":"Groen","given":"E. C."},{"family":"Kopczyńska","given":"S."},{"family":"Hauer","given":"M. P."},{"family":"Krafft","given":"T. D."},{"family":"Doerr","given":"J."}],"issued":{"date-parts":[[2017,9]]}},
  {"id":"maezawaAutomatedVerificationPatternbased2013","type":"paper-conference","title":"Automated Verification of Pattern-based Interaction Invariants in Ajax Applications","container-title":"Proceedings of the 28th IEEE/ACM International Conference on Automated Software Engineering","collection-title":"ASE'13","publisher":"IEEE Press","page":"158–168","source":"ACM Digital Library","abstract":"When developing asynchronous JavaScript and XML (Ajax) applications, developers implement Ajax design patterns for increasing the usability of the applications. However, unpredictable contexts of running applications might conceal faults that will break the design patterns, which decreases usability. We propose a support tool called JSVerifier that automatically verifies interaction invariants; the applications handle their interactions in invariant occurrence and order. We also present a selective set of interaction invariants derived from Ajax design patterns, as input. If the application behavior breaks the design patterns, JSVerifier automatically outputs faulty execution paths for debugging. The results of our case studies show that JSVerifier can verify the interaction invariants in a feasible amount of time, and we conclude that it can help developers increase the usability of Ajax applications.","URL":"https://doi.org/10.1109/ASE.2013.6693076","DOI":"10.1109/ASE.2013.6693076","ISBN":"978-1-4799-0215-6","author":[{"family":"Maezawa","given":"Yuta"},{"family":"Washizaki","given":"Hironori"},{"family":"Tanabe","given":"Yoshinori"},{"family":"Honiden","given":"Shinichi"}],"issued":{"date-parts":[[2013]]},"accessed":{"date-parts":[[2019,6,10]]},"publisher-place":"Piscataway, NJ, USA","event-place":"Silicon Valley, CA, USA"},
  {"id":"budgenUsingMappingStudies2008","type":"paper-conference","title":"Using Mapping Studies in Software Engineering","container-title":"PPIG","source":"Semantic Scholar","abstract":"Background: A mapping study provides a systematic and objective procedure for identifying the nature and extent of the empirical study data that is available to answer a particular research question. Such studies can also form a useful preliminary step for PhD study. Aim: We set out to assess how effective such studies have been when used for software engineering topics, and to identify the specific challenges that they present. Method: We have conducted an informal review of a number of mapping studies in software engineering, describing their main characteristics and the forms of analysis employed. Results: We examine the experiences and outcomes from six mapping studies, of which four are published. From these we note a recurring theme about the problems of classification and a preponderance of ‘gaps’ in the set of empirical studies. Conclusions: We identify our challenges as improving classification guidelines, encouraging better reporting of primary studies, and argue for identifying some ’empirical grand challenges’ for software engineering as a focus for the community.","author":[{"family":"Budgen","given":"David"},{"family":"Turner","given":"Mark"},{"family":"Brereton","given":"Pearl"},{"family":"Kitchenham","given":"Barbara A."}],"issued":{"date-parts":[[2008]]}},
  {"id":"kitchenhamUsingMappingStudies2011","type":"article-journal","title":"Using mapping studies as the basis for further research – A participant-observer case study","container-title":"Information and Software Technology","collection-title":"Special Section: Best papers from the APSEC","page":"638-651","volume":"53","issue":"6","source":"ScienceDirect","abstract":"Context\nWe are strong advocates of evidence-based software engineering (EBSE) in general and systematic literature reviews (SLRs) in particular. We believe it is essential that the SLR methodology is used constructively to support software engineering research.\nObjective\nThis study aims to assess the value of mapping studies which are a form of SLR that aims to identify and categorise the available research on a broad software engineering topic.\nMethod\nWe used a multi-case, participant-observer case study using five examples of studies that were based on preceding mapping studies. We also validated our results by contacting two other researchers who had undertaken studies based on preceding mapping studies and by assessing review comments related to our follow-on studies.\nResults\nOur original case study identified 11 unique benefits that can accrue from basing research on a preceding mapping study of which only two were case specific. We also identified nine problems associated with using preceding mapping studies of which two were case specific. These results were consistent with the information obtained from the validation activities. We did not find an example of an independent research group making use of a mapping study produced by other researchers.\nConclusion\nMapping studies can save time and effort for researchers and provide baselines to assist new research efforts. However, they must be of high quality in terms of completeness and rigour if they are to be a reliable basis for follow-on research.","URL":"http://www.sciencedirect.com/science/article/pii/S0950584910002272","DOI":"10.1016/j.infsof.2010.12.011","ISSN":"0950-5849","author":[{"family":"Kitchenham","given":"Barbara A."},{"family":"Budgen","given":"David"},{"family":"Pearl Brereton","given":"O."}],"issued":{"date-parts":[[2011,6,1]]},"accessed":{"date-parts":[[2019,6,25]]},"container-title-short":"Information and Software Technology"},
  {"id":"wohlinGuidelinesSnowballingSystematic2014","type":"paper-conference","title":"Guidelines for Snowballing in Systematic Literature Studies and a Replication in Software Engineering","container-title":"Proceedings of the 18th International Conference on Evaluation and Assessment in Software Engineering","collection-title":"EASE '14","publisher":"ACM","page":"38:1–38:10","source":"ACM Digital Library","abstract":"Background: Systematic literature studies have become common in software engineering, and hence it is important to understand how to conduct them efficiently and reliably. Objective: This paper presents guidelines for conducting literature reviews using a snowballing approach, and they are illustrated and evaluated by replicating a published systematic literature review. Method: The guidelines are based on the experience from conducting several systematic literature reviews and experimenting with different approaches. Results: The guidelines for using snowballing as a way to search for relevant literature was successfully applied to a systematic literature review. Conclusions: It is concluded that using snowballing, as a first search strategy, may very well be a good alternative to the use of database searches.","URL":"http://doi.acm.org/10.1145/2601248.2601268","DOI":"10.1145/2601248.2601268","ISBN":"978-1-4503-2476-2","author":[{"family":"Wohlin","given":"Claes"}],"issued":{"date-parts":[[2014]]},"accessed":{"date-parts":[[2019,6,25]]},"publisher-place":"New York, NY, USA","event-place":"London, England, United Kingdom"},
  {"id":"petersenSystematicMappingStudiesa","type":"article-journal","title":"Systematic Mapping Studies in Software Engineering","page":"11","source":"Zotero","abstract":"BACKGROUND: A software engineering systematic map is a deﬁned method to build a classiﬁcation scheme and structure a software engineering ﬁeld of interest. The analysis of results focuses on frequencies of publications for categories within the scheme. Thereby, the coverage of the research ﬁeld can be determined. Different facets of the scheme can also be combined to answer more speciﬁc research questions.\nOBJECTIVE: We describe how to conduct a systematic mapping study in software engineering and provide guidelines. We also compare systematic maps and systematic reviews to clarify how to chose between them. This comparison leads to a set of guidelines for systematic maps.\nMETHOD: We have deﬁned a systematic mapping process and applied it to complete a systematic mapping study. Furthermore, we compare systematic maps with systematic reviews by systematically analyzing existing systematic reviews.\nRESULTS: We describe a process for software engineering systematic mapping studies and compare it to systematic reviews. Based on this, guidelines for doing systematic maps are deﬁned.\nCONCLUSIONS: Systematic maps and reviews are different in terms of goals, breadth, validity issues and implications. Thus, they should be used complementarily and require different methods (e.g., for analysis).","language":"en","author":[{"family":"Petersen","given":"Kai"},{"family":"Feldt","given":"Robert"},{"family":"Mujtaba","given":"Shahid"},{"family":"Mattsson","given":"Michael"}]},
  {"id":"bevanQualityUsabilityNew","type":"article-journal","title":"Quality and usability: A new framework","page":"8","source":"Zotero","abstract":"ISO/IEC 9126 (1991) established a practical way of decomposing software quality into a set of characteristics and subcharacteristics. Reconciling this approach to quality with a new standard for usability (ISO 9241-11) has led to a comprehensive framework for software product quality which is being incorporated in a revision to ISO/IEC 9126. The new framework defines three perspectives: internal quality (static properties of the code), external quality (behaviour of the software when it is executed) and quality in use (whether the software meets the needs of the user when it is in use). Quality in use is a broader view of the concept of usability defined in ISO 9241-11. ISO/IEC 14598 describes a process for evaluating software product quality which is consistent with this model.","language":"en","author":[{"family":"Bevan","given":"Nigel"}]},
  {"id":"Usability101Introduction","type":"webpage","title":"Usability 101: Introduction to Usability","container-title":"Nielsen Norman Group","abstract":"What is usability? How, when, and where can you improve it? Why should you care? Jakob Nielsen defines key usability concepts - give to your boss or anyone else who doesn't have much time, but needs to know basic usability facts.","URL":"https://www.nngroup.com/articles/usability-101-introduction-to-usability/","title-short":"Usability 101","language":"en","accessed":{"date-parts":[[2019,6,25]]}},
  {"id":"ISOTR16982","type":"webpage","title":"ISO/TR 16982:2002(en), Ergonomics of human-system interaction — Usability methods supporting human-centred design","URL":"https://www.iso.org/obp/ui/#iso:std:iso:tr:16982:ed-1:v1:en","accessed":{"date-parts":[[2019,6,26]]}},
  {"id":"1400-1700ISOIEC25010","type":"webpage","title":"ISO/IEC 25010:2011","container-title":"ISO","abstract":"Systems and software engineering -- Systems and software Quality Requirements and Evaluation (SQuaRE) -- System and software quality models","URL":"http://www.iso.org/cms/render/live/en/sites/isoorg/contents/data/standard/03/57/35733.html","title-short":"ISO/IEC 25010","language":"en","author":[{"literal":"14:00-17:00"}],"accessed":{"date-parts":[[2019,6,26]]}},
  {"id":"donahueUsabilityBottomLine2001","type":"article-journal","title":"Usability and the bottom line","container-title":"IEEE Software","page":"31-37","volume":"18","issue":"1","source":"IEEE Xplore","abstract":"There is little debate that usability engineering benefits end users, but its benefit for companies and the people who work for them is less widely known. The author discusses these broader usability benefits and also how to use a cost-benefit analysis to demonstrate the value of usability to your company's bottom line.","DOI":"10.1109/52.903161","ISSN":"0740-7459","author":[{"family":"Donahue","given":"G. M."}],"issued":{"date-parts":[[2001,1]]}},
  {"id":"gammaDesignPatterns152006","type":"paper-conference","title":"Design Patterns – 15 Years Later","container-title":"ECOOP 2006 – Object-Oriented Programming","collection-title":"Lecture Notes in Computer Science","publisher":"Springer Berlin Heidelberg","page":"1-1","source":"Springer Link","abstract":"Design patterns are now a 15 year old thought experiment. And, today, for many, software design patterns have become part of the standard development lexicon. The reason is simple: rather than constantly redis-covering solutions to recurring design problems developers can refer to a body of literature that captures the best practices of system design. This talks looks back to the origins of design patterns, shows design patterns in action, and provides an overview of where patterns are today.","ISBN":"978-3-540-35727-8","language":"en","author":[{"family":"Gamma","given":"Erich"}],"editor":[{"family":"Thomas","given":"Dave"}],"issued":{"date-parts":[[2006]]}},
  {"id":"gammaDesignPatternsPresent2011","type":"chapter","title":"Design Patterns – Past, Present & Future","container-title":"The Future of Software Engineering","publisher":"Springer Berlin Heidelberg","page":"72-72","source":"Springer Link","abstract":"Design Patterns are now a 15 year old thought experiment. And today, for many, Design Patterns have become part of the standard development lexicon. This talk looks back to the origin of Design Patterns and how they evolved since their initial description. I will then show patterns in action in the context of the Eclipse and Jazz platforms. Finally, I will discuss how the Design Patterns from the book can be refactored towards a Design Pattern 2.0 version.","URL":"https://doi.org/10.1007/978-3-642-15187-3_4","ISBN":"978-3-642-15187-3","language":"en","author":[{"family":"Gamma","given":"Erich"}],"editor":[{"family":"Nanz","given":"Sebastian"}],"issued":{"date-parts":[[2011]]},"accessed":{"date-parts":[[2019,7,1]]},"publisher-place":"Berlin, Heidelberg","DOI":"10.1007/978-3-642-15187-3_4"},
  {"id":"gammaDesignPatternsTen2002","type":"chapter","title":"Design Patterns — Ten Years Later","container-title":"Software Pioneers: Contributions to Software Engineering","publisher":"Springer Berlin Heidelberg","page":"688-700","source":"Springer Link","abstract":"Design patterns have changed the way software developers design object-oriented systems. Rather than rediscovering solutions to recurring design problems over and over again, developers can now refer to a body of literature that captures THE best practices of system design. This article looks back to where design patterns came from, shows design patterns in action, and provides an overview of where patterns are today.","URL":"https://doi.org/10.1007/978-3-642-59412-0_39","ISBN":"978-3-642-59412-0","language":"en","author":[{"family":"Gamma","given":"Erich"}],"editor":[{"family":"Broy","given":"Manfred"},{"family":"Denert","given":"Ernst"}],"issued":{"date-parts":[[2002]]},"accessed":{"date-parts":[[2019,7,1]]},"publisher-place":"Berlin, Heidelberg","DOI":"10.1007/978-3-642-59412-0_39"},
  {"id":"gammaDesignPatternsAbstraction2002","type":"chapter","title":"Design Patterns: Abstraction and Reuse of Object-Oriented Design","container-title":"Software Pioneers: Contributions to Software Engineering","publisher":"Springer Berlin Heidelberg","page":"701-717","source":"Springer Link","abstract":"We propose design patterns as a new mechanism for expressing object-oriented design experience. Design patterns identify, name, and abstract common themes in object-oriented design. They capture the intent behind a design by identifying objects, their collaborations, and the distribution of responsibilities. Design patterns play many roles in the object-oriented development process: they provide a common vocabulary for design, they reduce system complexity by naming and defining abstractions, they constitute a base of experience for building reusable software, and they act as building blocks from which more complex designs can be built. Design patterns can be considered reusable micro-architectures that contribute to an overall system architecture. We describe how to express and organize design patterns and introduce a catalog of design patterns. We also describe our experience in applying design patterns to the design of object-oriented systems.","URL":"https://doi.org/10.1007/978-3-642-59412-0_40","ISBN":"978-3-642-59412-0","title-short":"Design Patterns","language":"en","author":[{"family":"Gamma","given":"Erich"},{"family":"Helm","given":"Richard"},{"family":"Johnson","given":"Ralph"},{"family":"Vlissides","given":"John"}],"editor":[{"family":"Broy","given":"Manfred"},{"family":"Denert","given":"Ernst"}],"issued":{"date-parts":[[2002]]},"accessed":{"date-parts":[[2019,7,1]]},"publisher-place":"Berlin, Heidelberg","DOI":"10.1007/978-3-642-59412-0_40"},
  {"id":"UsingPatternLanguages","type":"webpage","title":"Using Pattern Languages for Object-Oriented Programs","URL":"http://c2.com/doc/oopsla87.html","accessed":{"date-parts":[[2019,7,1]]}},
  {"id":"dieforfreeAutomaticallyExportedCode2019","type":"book","title":"Automatically exported from code.google.com/p/edsebooks: dieforfree/edsebooks","source":"GitHub","URL":"https://github.com/dieforfree/edsebooks","title-short":"Automatically exported from code.google.com/p/edsebooks","author":[{"family":"dieforfree","given":""}],"issued":{"date-parts":[[2019,7,1]]},"accessed":{"date-parts":[[2019,7,1]]},"original-date":{"date-parts":[[2015,4,7]]}},
  {"id":"alexanderPatternLanguageTowns1977","type":"article-journal","title":"A pattern language : towns, buildings, construction / Chistopher Alexander... [et al.].","source":"ResearchGate","abstract":"En esta obra se exponen el lenguaje arquitectónico y las pautas prácticas que permiten llevar a la práctica la novedosa propuesta novedosa de modos de construir, planear y pensar la arquitectura, expuesta en The timeless way of building.","title-short":"A pattern language","author":[{"family":"Alexander","given":"Christopher"}],"issued":{"date-parts":[[1977]]}}
]
